openapi: 3.0.2
info:
  title: Traffic API v7
  version: 7.2.0
  description: The HERE Traffic API is a REST API that provides traffic flow and incidents
    information.
  termsOfService: http://developer.here.com/terms-conditions
  license:
    name: HERE Documentation License
    url: https://legal.here.com/en-gb/terms/documentation-license
  x-document-meta-data:
    copyright: "Â© 2023 HERE Europe B.V."
    document-id: 46edfd96-a08a-45ee-abb7-474587b90dab
    date-created: '2023-04-12T13:33:02+00:00'
security:
- Bearer: []
- ApiKey: []
servers:
- url: https://data.traffic.hereapi.com/v7
paths:
  "/flow":
    get:
      tags:
      - Real-Time Traffic
      operationId: getFlow
      summary: Real-Time Flow Information
      description: 'Get real-time traffic flow data for a geospatial area.

'
      parameters:
      - "$ref": "#/components/parameters/in"
      - "$ref": "#/components/parameters/locationReferencing"
      - "$ref": "#/components/parameters/minJamFactor"
      - "$ref": "#/components/parameters/maxJamFactor"
      - "$ref": "#/components/parameters/functionalClasses"
      - "$ref": "#/components/parameters/advancedFeatures"
      - "$ref": "#/components/parameters/XRequestIdParam"
      responses:
        200:
          "$ref": "#/components/responses/FlowResponseOk"
        400:
          "$ref": "#/components/responses/FlowResponseInvalidRequest"
        401:
          "$ref": "#/components/responses/FlowResponseAuthenticationFailed"
        403:
          "$ref": "#/components/responses/FlowResponseNotAllowed"
        414:
          "$ref": "#/components/responses/RequestUriTooLong"
        500:
          "$ref": "#/components/responses/FlowResponseInternalServerError"
        503:
          "$ref": "#/components/responses/ResponseServiceUnavailableError"
  "/incidents":
    get:
      tags:
      - Real-Time Traffic
      operationId: getIncidents
      summary: Real-Time Incident Information
      description: 'Get traffic incidents for a geospatial area.

'
      parameters:
      - "$ref": "#/components/parameters/in"
      - "$ref": "#/components/parameters/locationReferencing"
      - "$ref": "#/components/parameters/functionalClasses"
      - "$ref": "#/components/parameters/criticality"
      - "$ref": "#/components/parameters/type"
      - "$ref": "#/components/parameters/earliestStartTime"
      - "$ref": "#/components/parameters/latestEndTime"
      - "$ref": "#/components/parameters/lang"
      - "$ref": "#/components/parameters/units"
      - "$ref": "#/components/parameters/XRequestIdParam"
      responses:
        200:
          "$ref": "#/components/responses/IncidentsResponseOk"
        400:
          "$ref": "#/components/responses/IncidentsResponseInvalidRequest"
        401:
          "$ref": "#/components/responses/IncidentResponseAuthenticationFailed"
        403:
          "$ref": "#/components/responses/IncidentsResponseNotAllowed"
        414:
          "$ref": "#/components/responses/RequestUriTooLong"
        500:
          "$ref": "#/components/responses/IncidentsResponseInternalServerError"
        503:
          "$ref": "#/components/responses/ResponseServiceUnavailableError"
  "/incidents/{originalId}":
    get:
      tags:
      - Real-Time Traffic
      operationId: getIncidentsById
      summary: Real-Time Incident Information for the given id
      description: |
        Get traffic incident for a given id. The id can be prefixed with a namespace.
        If no namespace is specified, the default namespace is "here:traffic:incident".
      parameters:
      - "$ref": "#/components/parameters/originalId"
      - "$ref": "#/components/parameters/locationReferencing"
      - "$ref": "#/components/parameters/lang"
      - "$ref": "#/components/parameters/units"
      - "$ref": "#/components/parameters/XRequestIdParam"
      responses:
        200:
          "$ref": "#/components/responses/IncidentItemResponseOk"
        400:
          "$ref": "#/components/responses/IncidentItemResponseInvalidRequest"
        401:
          "$ref": "#/components/responses/IncidentResponseAuthenticationFailed"
        403:
          "$ref": "#/components/responses/IncidentsResponseNotAllowed"
        404:
          "$ref": "#/components/responses/IncidentItemResponseNotFound"
        414:
          "$ref": "#/components/responses/RequestUriTooLong"
        500:
          "$ref": "#/components/responses/IncidentsResponseInternalServerError"
        503:
          "$ref": "#/components/responses/ResponseServiceUnavailableError"
  "/health":
    get:
      operationId: getHealth
      summary: Health status of the service
      tags:
      - API Information
      description: Returns the health of the service
      parameters:
      - "$ref": "#/components/parameters/XRequestIdParam"
      security: []
      responses:
        200:
          "$ref": "#/components/responses/HealthResponseOk"
        414:
          "$ref": "#/components/responses/RequestUriTooLong"
        default:
          "$ref": "#/components/responses/HealthResponseFail"
  "/version":
    get:
      operationId: getVersion
      summary: Full version of the API
      tags:
      - API Information
      description: Returns the version of the service
      parameters:
      - "$ref": "#/components/parameters/XRequestIdParam"
      security: []
      responses:
        200:
          "$ref": "#/components/responses/VersionResponseOk"
        414:
          "$ref": "#/components/responses/RequestUriTooLong"
        500:
          "$ref": "#/components/responses/ErrorResponseInternalServerError"
        502:
          "$ref": "#/components/responses/ErrorResponseBadGateway"
        503:
          "$ref": "#/components/responses/ErrorResponseServiceUnavailable"
        504:
          "$ref": "#/components/responses/ErrorResponseGatewayTimeout"
  "/openapi":
    get:
      operationId: getOpenAPI
      summary: Retrieves this API specification in OpenAPI 3 format
      tags:
      - API Information
      description: Returns the OpenAPI specification of the Traffic API v7
      parameters:
      - "$ref": "#/components/parameters/XRequestIdParam"
      security: []
      responses:
        200:
          description: OpenAPI specification of Traffic API v7
          "$ref": "#/components/responses/OpenApiResponseOk"
        401:
          "$ref": "#/components/responses/UnauthorizedErrorResponse"
components:
  parameters:
    criticality:
      name: criticality
      description: |
        The severity of the incident that has occured, with the following possible values: low (least severe), minor, major, and critical (most severe).
        A list of criticality values separated by commas (`,`), to return results for.
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - low
          - minor
          - major
          - critical
        uniqueItems: true
      examples:
        criticalOnly:
          value:
          - critical
          summary: Only critical incidents
        criticalAndMajor:
          value:
          - critical
          - major
          summary: Critical and Major incidents
    earliestStartTime:
      name: earliestStartTime
      description: |
        The earliest start time that is accepted for an incident to be included in the results.

        Format is **RFC 3339**, section 5.6 as defined by `date-time`. Will always be UTC time.
      schema:
        "$ref": "#/components/schemas/Time"
      in: query
      style: form
      example: '2019-10-10T00:00:00.00Z'
    advancedFeatures:
      name: advancedFeatures
      description: |
        A list of advanced features separated by commas (`,`), to return results for.

        | Feature        | Description |
        |----------------|-------------|
        | `deepCoverage` | More complete flow coverage |
        | `lanes`        | Lane level traffic information about lanes designated for High Occupancy Vehicles or at highway forks/splits |

        **NOTE:** Advanced features are billed at a separate price point to normal requests. Please
        contact HERE sales for further details.
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
          - deepCoverage
          - lanes
        uniqueItems: true
      examples:
        criticalOnly:
          value:
          - deepCoverage
          summary: Deep coverage
        criticalAndMajor:
          value:
          - deepCoverage
          - lanes
          summary: Deep coverage and Lanes
    functionalClasses:
      name: functionalClasses
      description: |
        A list of functional classes separated by commas (`,`), to return results for. The
        functional class is used to group roads depending on the speed, importance, and
        connectivity.

        Functional classes are integers from `1` to `5` inclusive where functional class `1` are
        the most important and functional class `5` are the least important. The table below
        describes the roads that fall into each class.

        | Functional Class | Description |
        |------------------|-------------|
        | 1                | These roads are meant for high volume, maximum speed traffic between and through major metropolitan areas. There are very few, if any, speed changes. Access to this road is usually controlled. |
        | 2                | These roads are used to channel traffic to Main Roads (functionalClass=1) for travel between and through cities in the shortest amount of time. There are very few, if any speed changes. |
        | 3                | These roads interconnect First Class Roads (2) and provide a high volume of traffic movement at a lower level of mobility than First Class Roads (2). |
        | 4                | These roads provide for a high volume of traffic movement at moderate speeds between neighborhoods. These roads connect with higher Functional Class roads to collect and distribute traffic between neighborhoods. |
        | 5                | These roads' volume and traffic movements are below the level of any other road. |
      in: query
      style: form
      required: false
      schema:
        type: array
        items:
          type: integer
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        default:
        - 1
        - 2
        - 3
        - 4
        - 5
      examples:
        all:
          value:
          - 1
          - 2
          - 3
          - 4
          - 5
          summary: All functional classes (default)
        one:
          value:
          - 1
          summary: Only functional class 1
        one_two_three:
          value:
          - 1
          - 2
          - 3
          summary: Functional classes 1 - 3
    in:
      name: in
      description: |
        Return flow items within a geographical area.
        Area within which to return flow.

        A geographic area can be one of the following:

         * A circular area, provided as latitude, longitude, and radius (in meters)

           Format: `circle:{latitude},{longitude};r={radius}`

           Type: `circle:{decimal},{decimal};r={integer}`

           Example: `circle:13.1,-43.1;r=10000`

         * A bounding box, provided as _west longitude_, _south latitude_, _east longitude_, _north latitude_

           Format: `bbox:{west longitude},{south latitude},{east longitude},{north latitude}`

           Example: `bbox:13.08836,52.33812,13.761,52.6755`

         * A corridor, provided as a polyline in
           [Flexible Polyline](https://github.com/heremaps/flexible-polyline) encoding and a
           radius/width (in meters). The radius is measured perpendicular to each segment of the
           polyline on both sides, so a radius of 50 meters will cover an area 50 meters on either
           side of the polyline and be 100 meters wide from one side to the other.

           Format: `corridor:{polyline};r={radius}`

           Example: `corridor:BF05xgKuy2xCx9B7vUl0OhnR54EqSzpEl-HxjD3pBiGnyGi2CvwFsgD3nD4vB6e;r=50`
      in: query
      style: form
      required: true
      schema:
        type: string
      examples:
        circle:
          value: circle:13.1,-43.1;r=10000
          summary: A circular area
        bbox:
          value: bbox:13.08836,52.33812,13.761,52.6755
          summary: A bounding box
        corridor:
          value: corridor:BF05xgKuy2xCx9B7vUl0OhnR54EqSzpEl-HxjD3pBiGnyGi2CvwFsgD3nD4vB6e;r=50
          summary: A corridor
        tile:
          value: tile:377894440
          summary: A tile
    latestEndTime:
      name: latestEndTime
      description: |
        The latest end time that is accepted for an incident to be included in the results.

        Format is **RFC 3339**, section 5.6 as defined by `date-time`. Will always be UTC time.
      schema:
        "$ref": "#/components/schemas/Time"
      in: query
      style: form
      example: '2019-10-20T00:00:00.00Z'
    locationReferencing:
      name: locationReferencing
      description: |
        The location referencing scheme (or schemes) to be used in the response. Multiple location
        referencing schemes can be specified separated by commas (`,`).

        |Location Referencing | Description |
        |------------------|-------------|
        | `none`           | The response will not contain any location references such as tmc, olr, or shape points. |
        | `olr`            | Open Location References is a TISA location referencing standard also called TPEGOpenLR. Please visit https://tisa.org/ for more details. TISA Specifications are also published by ISO https://www.iso.org/ Specifications: ISO/TS 21219-22:2017 |
        | `shape`          | Shape points. Defines a location by a series of geo-coordinates. |
        | `tmc`            | Traffic Message Channel (TMC) location referencing method uses tables of pre-coded locations. For details please refer ISO specifications ISO 14819-3:2013 and ISO 14819-2:2013. |
      in: query
      style: form
      required: true
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - none
          - olr
          - shape
          - tmc
        minItems: 1
        uniqueItems: true
      examples:
        olr:
          value: olr
          summary: Only return locations as OLR
        tmc_plus_olr:
          value: tmc,olr
          summary: Return locations with both TMC and OLR
    lang:
      name: lang
      description: |
        The language to be used for the incident descriptions. Parameter value must follow
        specification: BCP47. Supported values are available on  [iana.org](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry)
      in: query
      style: form
      required: false
      schema:
        type: string
      example: en-US
    units:
      name: units
      description: |
        Units of measurement to be used in incident descriptions.
        The default is metric.
      in: query
      style: form
      required: false
      schema:
        type: string
        enum:
        - metric
        - imperial
        default: metric
        example: metric
    minJamFactor:
      name: minJamFactor
      description: |
        The minimum jam factor value for flow items to be included in the response. All flow items
        with a _lower_ jam factor than the value specified by the `minJamFactor` parameter are
        omitted. The parameter can be used by clients that require flow data for congested roadways
        only.

        The value must be in the range `0.0` to `10.0` (inclusive).

        Default: `0.0`
      in: query
      style: form
      required: false
      schema:
        type: number
        default: 0.0
      example: 5.0
    maxJamFactor:
      name: maxJamFactor
      description: |
        The maximum jam factor value for flow items to be included in the response. All flow items
        with a _higher_ jam factor than the value specified by the `maxJamFactor` parameter are
        omitted. This parameter can be used by clients that require flow data only for
        congestion-free roads.

        The values must be in the range `0.0` to `10.0` (inclusive).

        Default: `1.0`
      in: query
      style: form
      required: false
      schema:
        type: number
        default: 10.0
      example: 8.0
    type:
      name: type
      description: |
        A list of incident type values separated by commas (`,`), to return results for.

        | Type              | Description |
        |-------------------|-------------|
        | `accident`        | | Indicates that there has been a collision
        | `construction`    | | Indicates that building or roadworks are taking place
        | `congestion`      | | Indicates that there has been a build up of vehicles
        | `disabledVehicle` | | Indicates that a vehicle is unable to move and is obstructing the road
        | `massTransit`     | | Indicates that a large amount of people are migrating from one location to another
        | `plannedEvent`    | | Indicates that an organised event is taking place causing disruption
        | `roadHazard`      | | Indicates that there are dangerous objects on the surface of the road
        | `roadClosure`     | | Indicates that the road has been closed, e.g. police presence
        | `weather`         | | Indicates that weather conditions are causing disruptions
        | `laneRestriction` | | Indicates that some of the lanes have access restrictions
        | `other`           | | Indicates that an incident not explainable with the types above has occurred
      in: query
      style: form
      required: false
      schema:
        type: string
      examples:
        accidentOnly:
          value: accident
          summary: Only incidents of type accident
        roadHazardAndWeather:
          value: roadHazard,weather
          summary: Incidents of type roadHazard or weather
    originalId:
      name: originalId
      description: |
        Identifier of the first traffic incident in a chain of updates. Once an incident chain
        has been created, this value will never change.
      in: path
      required: true
      schema:
        type: string
      example: '2349753562597427858'
    XRequestIdParam:
      name: X-Request-Id
      in: header
      description: 'User-provided token that can be used to trace a request or a group
        of requests sent to the service. This can be any string but UUID is preferred.

'
      schema:
        type: string
      example: 8230d7ad-3f1c-4191-a8dd-f3c42026da89
  headers:
    X-Correlation-Id:
      description: Auto-generated id that univocally identifies the request.
      schema:
        type: string
      example: 4199533b-6290-41db-8d79-edf4f4019a74
    X-Request-Id:
      description: 'User-provided token that can be used to trace a request or a group
        of requests sent to the service. This can be any string but UUID is preferred.

'
      schema:
        type: string
      example: 8230d7ad-3f1c-4191-a8dd-f3c42026da89
  securitySchemes:
    ApiKey:
      type: apiKey
      in: query
      name: apiKey
      description: |
        A key generated specifically to authenticate API requests.
        For more information on how to get an API key, see https://developer.here.com/documentation/identity-access-management/dev_guide/index.html.
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        A token obtained from a separate endpoint using client credentials and an OAuth 1.0a HMAC-SHA256 signed request.
        For more information on how to get a bearer token, see https://developer.here.com/documentation/identity-access-management/dev_guide/index.html.
  schemas:
    AuthError:
      description: Error object reported in case of authentication or authorization
        errors.
      type: object
      properties:
        error:
          type: string
          description: Error message
        error_description:
          type: string
          description: Detailed information about the error
      required:
      - error
      example:
        error: Unauthorized
        error_description: ApiKey invalid. ApiKey not found.
    Confidence:
      description: |
        The number between 0.0 and 1.0 indicating the proportion of real time data included in
        the speed calculation.

        * 0.7 < `confidence` <= 1.0 indicates real time speeds
        * 0.5 < `confidence` <= 0.7 indicates historical speeds
        * 0.0 < `confidence` <= 0.5 indicates speed limit

        This field can be used to identify whether the data for a location is derived from real
        time probe sources or historical information only.  All confidence data 0.71 and above
        is based on real-time information, where a confidence value of 0.75 or greater indicates
        high confidence real-time information.  A confidence value equal to 0.70 means that the
        data is derived from historical data only.
      type: number
      minimum: 0.0
      maximum: 1.0
    CurrentFlow:
      description: Information about flow information for a specific location.
      properties:
        speed:
          "$ref": "#/components/schemas/SpeedCapped"
        speedUncapped:
          "$ref": "#/components/schemas/SpeedUncapped"
        freeFlow:
          "$ref": "#/components/schemas/FreeFlow"
        jamFactor:
          "$ref": "#/components/schemas/JamFactor"
        jamTendency:
          "$ref": "#/components/schemas/JamTendency"
        confidence:
          "$ref": "#/components/schemas/Confidence"
        traversability:
          "$ref": "#/components/schemas/Traversability"
        junctionTraversability:
          "$ref": "#/components/schemas/JunctionTraversability"
        subSegments:
          "$ref": "#/components/schemas/SubSegments"
        lanes:
          "$ref": "#/components/schemas/Lanes"
      required:
      - freeFlow
      - jamFactor
    EmissionRestriction:
      description: |
        The class of emission that is restricted.
        More detail about each emission type can be found in https://en.wikipedia.org/wiki/European_emission_standards.

        Possible emisson types are:
        | Emission Type |
        |---------------|
        | `euro3` |
        | `euro3d4` |
        | `euro4` |
        | `euro5` |
      type: string
      enum:
      - euro3
      - euro3d4
      - euro4
      - euro5
      example: euro4
    EquipmentTypeRestriction:
      description: |
        The type of equipment that is restricted.

        Possible equipments are:
        | Equipment Type |
        |---------------|
        | `withCaravan` |
        | `withTrailer` |
        | `withoutSnowChains` |
        | `withoutWinterTyres` |
      type: string
      enum:
      - withCaravan
      - withTrailer
      - withoutSnowChains
      - withoutWinterTyres
      example: withTrailer
    ErrorResponse:
      description: Response in case of error
      properties:
        title:
          type: string
          description: Human-readable error description
          example: Input data failed validation
        status:
          type: integer
          description: HTTP status code
          example: 400
        code:
          type: string
          description: |
            Machine readable service error code.

            All error codes of this service start with "`E608`". The last three digits describe a
            specific error. Provide this error code when contacting support.

            **NOTE:** Please note that the list of possible error codes could be extended in the
            future. The client application is expected to handle such a case gracefully.

            | Code      | Reason  |
            | --------- | ------- |
            | `E608001` | Malformed query. Invalid traffic event type. Check the error message for details. |
            | `E608002` | Malformed query. Parameter `in` is missing. Check the error message for details. |
            | `E608003` | Malformed query. Parameter `in` is invalid. Check the error message for details. |
            | `E608004` | Malformed query. Invalid `in` type. Check the error message for details. |
            | `E608005` | Malformed query. Invalid BBox parameter. Check the error message for details. |
            | `E608006` | Malformed query. Invalid BBox size. Check the error message for details. |
            | `E608007` | Malformed query. Invalid latitude parameter. Check the error message for details. |
            | `E608008` | Malformed query. Latitude value is too small. Check the error message for details. |
            | `E608009` | Malformed query. Latitude value is too big. Check the error message for details. |
            | `E608010` | Malformed query. Invalid longitude parameter. Check the error message for details. |
            | `E608011` | Malformed query. Longitude value is too small. Check the error message for details. |
            | `E608012` | Malformed query. Longitude value is too big. Check the error message for details. |
            | `E608013` | Malformed query. Invalid circle parameter. Check the error message for details. |
            | `E608014` | Malformed query. Invalid circle center. Check the error message for details. |
            | `E608015` | Malformed query. Invalid circle/corridor radius. Check the error message for details. |
            | `E608016` | Malformed query. Circle/Corridor radius is too small. Check the error message for details. |
            | `E608017` | Malformed query. Circle/Corridor radius is too big. Check the error message for details. |
            | `E608018` | Malformed query. Invalid Frc. Check the error message for details. |
            | `E608019` | Malformed query. Invalid polyline. Check the error message for details. |
            | `E608022` | Internal error. Failed to fetch traffic information. Check the error message for details. |
            | `E608023` | Internal error. Failed to fetch traffic information. Check the error message for details. |
            | `E608038` | Malformed query. Incident item not found or removed from system. Check the error message for details. |
            | `E608039` | Item not found. Incident id failed validation. Check the error message for details. |
            | `E608040` | Malformed query. Invalid criticality value. Check the error message for details. |
            | `E608041` | Malformed query. Invalid incident type value. Check the error message for details. |
            | `E608042` | Malformed query. Invalid corridor parameter. Check the error message for details. |
            | `E608043` | Malformed query. Invalid incident earliestStartTime or latestEndTime. Check the error message for details. |
            | `E608044` | Malformed query. Incident latestEndTime should be bigger than or equal to earliestStartTime. Check the error message for details. |
            | `E608045` | Malformed query. Request query is too long. Check the error message for details. |
            | `E608046` | Malformed query. Invalid location referencing value. Check the error message for details. |
            | `E608047` | Malformed query. Invalid language value. Check the error message for details. |
            | `E608049` | Malformed query. Invalid flow minJamFactor or maxJamFactor values. Check the error message for details. |
            | `E608050` | Malformed query. Invalid min/maxJamFactor value. maxJamFactor cannot be less than minJamFactor. |
            | `E608051` | Malformed query. Parameter `locationReferencing` is missing. Check the error message for details. |
            | `E608052` | Malformed query. Other location referencing values cannot be provided together with 'none'. |
            | `E608053` | Item not found. Traffic incident found but does not support requested location referencing. Check the error message for details. |
            | `E608054` | Malformed query. Invalid advanced feature value. Check the error message for details. |
            | `E608055` | Malformed query. Corridor length is too long. Check the error message for details. |
            | `E608056` | Malformed query. Corridor length is too short. Check the error message for details. |
            | `E608057` | Malformed query. Bounding box coordinates do not follow south-west, north-east order. Check the error message for details. |
            | `E608060` | Malformed query. Unsupported units value. |
            | `E608666` | Internal error. Check the error message for details. |
          example: E608001
        cause:
          type: string
          description: Human-readable explanation for the error
          example: The input data in question does not comply with validation rules
        action:
          type: string
          description: Human-readable description of the action that can be taken
            to correct the error
          example: Request a valid id
        correlationId:
          type: string
          description: Auto-generated id that univocally identifies the request
          example: 4199533b-6290-41db-8d79-edf4f4019a74
      required:
      - title
      - status
      - code
      - cause
      - action
      - correlationId
    FlowItem:
      description: Information about traffic flow for a specific location.
      properties:
        location:
          "$ref": "#/components/schemas/Location"
        currentFlow:
          allOf:
          - "$ref": "#/components/schemas/CurrentFlow"
      required:
      - location
      - currentFlow
    FlowResponse:
      description: Returns flow items within the specified area.
      properties:
        sourceUpdated:
          description: Last update time of traffic data source. Format is **RFC 3339**,
            section 5.6 as defined by `date-time`. Will always be UTC time.
          allOf:
          - "$ref": "#/components/schemas/Time"
        results:
          description: List of flow items.
          type: array
          items:
            "$ref": "#/components/schemas/FlowItem"
      required:
      - results
    FreeFlow:
      description: |
        The free flow speed speed (in meters per second) is a reference speed provided to
        indicate the speed on the segment at which vehicles should be considered to be able to
        travel without impediment.
      type: number
      minimum: 0
      example: 50
    FuelTypeRestriction:
      description: |
        The type of fuel that is restricted.

        Possible fuel types are:
        | Fuel Type | Description            |
        |-----------|------------------------|
        | `diesel`  | Only vehicles with diesel fuel |
        | `lpg`  | Only vehicles with lpg fuel |
        | `petrol`   | Only vehicles with petrol fuel  |
      type: string
      enum:
      - petrol
      - diesel
      - lpg
      example: diesel
    HealthResponseFail:
      description: Returns the health of the service
      properties:
        status:
          description: |
            Health status of the service:

            * `ok` - the service is operating normally
            * `fail` - the service is currently encountering a failure
          type: string
          enum:
          - fail
      required:
      - status
    HealthResponseOK:
      description: Returns the health of the service
      properties:
        status:
          description: |
            Health status of the service:

            * `ok` - the service is operating normally
            * `fail` - the service is currently encountering a failure
          type: string
          enum:
          - ok
    IncidentCriticality:
      description: 'The severity of the incident that has occured, with the following
        possible values: low (least severe), minor, major, and critical (most severe).

'
      type: string
      enum:
      - critical
      - major
      - minor
      - low
      example: major
    IncidentDetails:
      description: Specific details of the incident.
      properties:
        id:
          description: Unique identifier for traffic incident.
          type: string
          example: '3848418285967206032'
        hrn:
          description: 'Unique identifier for traffic incident in HRN notation.

'
          type: string
          example: here:traffic:incident:3848418285967206032
        originalId:
          description: |
            Identifier of the first traffic incident in a chain of updates. Once an incident chain
            has been created, this value will never change.
          type: string
          example: '2349753562597427858'
        originalHrn:
          description: 'Identifier of the first traffic incident in a chain of updates
            in HRN notation.

'
          type: string
          example: here:traffic:incident:2349753562597427858
        parentId:
          description: |
            Identifier of another incident to which this incident is linked. For example, if the
            item is a congestion item caused by an accident, this id will refer to the accident.
          type: string
          example: '4273574943639816284'
        startTime:
          description: |
            Start time of the incident. Format is **RFC 3339**, section 5.6 as defined by
            `date-time`. Will always be UTC time.
          allOf:
          - "$ref": "#/components/schemas/Time"
          example: '2019-10-12T07:20:00.00Z'
        endTime:
          description: |
            End time of the incident. Format is **RFC 3339**, section 5.6 as defined by `date-time`.
            Will always be UTC time.
          allOf:
          - "$ref": "#/components/schemas/Time"
          example: '2019-10-13T14:20:00.00Z'
        entryTime:
          description: |
            The time the incident was entered into the system. Format is **RFC 3339**, section 5.6
            as defined by `date-time`. Will always be UTC time.
          allOf:
          - "$ref": "#/components/schemas/Time"
          example: '2019-10-09T11:38:13.76Z'
        roadClosed:
          description: A flag to indicate whether this incident is a road closure.
          type: boolean
          example: true
        criticality:
          allOf:
          - "$ref": "#/components/schemas/IncidentCriticality"
        type:
          allOf:
          - "$ref": "#/components/schemas/IncidentType"
        codes:
          description: |
            A prioritised list of codes which describe the cause of the
            incident according to the AlertC specification.

            The codes are given in order of importance, so the first item in
            the list is considered the primary cause of the incident.

            The full list of codes in the AlertC specification ISO 14819-2:2013
            can be obtained from https://www.iso.org/standard/59231.html.
          type: array
          example:
          - 401
          - 802
          items:
            type: integer
        description:
          description: A full natural language description of the incident.
          allOf:
          - "$ref": "#/components/schemas/LocalizedString"
          example:
            value: Closed between S Halsted St and S Clinton St - Closed due to roadwork.
            language: en-US
        summary:
          description: A short natural language description of the incident.
          allOf:
          - "$ref": "#/components/schemas/LocalizedString"
          example:
            value: Closed due to roadwork.
            language: en-US
        descriptionParts:
          allOf:
          - "$ref": "#/components/schemas/LocationDescriptionParts"
          example:
            atOffTmc:
              summary: Proximity type `at`
              value:
                proximityType: at
                roadName: 20th St
                intersectingRoadName: Joy Ranch Rd
        vehicleRestrictions:
          description: A list of restrictions that apply to the vehicles passing through
            this area.
          type: array
          items:
            "$ref": "#/components/schemas/VehicleRestriction"
        junctionTraversability:
          "$ref": "#/components/schemas/JunctionTraversability"
      required:
      - id
      - originalId
      - roadClosed
    IncidentItem:
      description: Information about a traffic incident.
      properties:
        location:
          "$ref": "#/components/schemas/Location"
        incidentDetails:
          "$ref": "#/components/schemas/IncidentDetails"
    IncidentType:
      description: |
        An open list of possible incident types. The incident `type` gives a high level
        representation of the more detailed `code` field which gives a numerical value mapped to
        the AlertC event codes.

        | Type              | Description |
        |-------------------|-------------|
        | `accident`        | Indicates that there has been a collision |
        | `construction`    | Indicates that building or roadworks are taking place |
        | `congestion`      | Indicates that there has been a build up of vehicles |
        | `disabledVehicle` | Indicates that a vehicle is unable to move and is obstructing the road |
        | `massTransit`     | Indicates that an event is present related to public transit |
        | `plannedEvent`    | Indicates that an organised event is taking place causing disruption |
        | `roadHazard`      | Indicates that there are dangerous objects on the surface of the road |
        | `roadClosure`     | Indicates that the road has been closed, e.g. police presence |
        | `weather`         | Indicates that weather conditions are causing disruptions |
        | `laneRestriction` | Indicates that some of the lanes have access restrictions |
        | `other`           | Indicates that an incident not explainable with the types above has occurred |

        Note: Since new types are expected to appear, it is important to check for unknown types
        when parsing this value.
      type: string
      x-extensible-enum:
      - accident
      - congestion
      - construction
      - disabledVehicle
      - massTransit
      - plannedEvent
      - roadHazard
      - roadClosure
      - weather
      - laneRestriction
      - other
      example: construction
    IncidentsResponse:
      description: Returns incident items within the specified area.
      properties:
        sourceUpdated:
          description: Last update time of traffic data source. Format is **RFC 3339**,
            section 5.6 as defined by `date-time`. Will always be UTC time.
          allOf:
          - "$ref": "#/components/schemas/Time"
        results:
          description: List of incident items.
          type: array
          items:
            "$ref": "#/components/schemas/IncidentItem"
      required:
      - results
    JamFactor:
      description: |
        The number between 0.0 and 10.0 indicating the expected quality of travel. When there
        is a road closure, the `jamFactor` will be 10.0. As the value approaches 10.0 the
        quality of travel is getting worse.
      type: number
      minimum: 0.0
      maximum: 10.0
    JamTendency:
      description: |
        A representation of whether the congestion is increasing, decreasing, or constant. The
        jam tendency may take the following values.

        | Jam Tendency        | Description                    |
        |---------------------|--------------------------------|
        | +2                  | Rapidly increasing congestion. |
        | +1                  | Increasing congestion.         |
        |  0                  | Constant congestion.           |
        | -1                  | Decreasing congestion.         |
        | -2                  | Rapidly decreasing congestion. |

        Default value of 0 can be assumed when this attribute is not present.
      type: integer
      x-extensible-enum:
      - -2
      - -1
      - 0
      - 1
      - 2
      default: 0
      example: 2
    JunctionTraversability:
      description: |
        Indicates junction traversability. Used for road closures to indicate if the closure can
        be crossed.

        | Junction Traversability | Description |
        |-------------------------|-------------|
        | `allOpen`             | All junctions are open. |
        | `allClosed`               | All junctions are closed. |
        | `intermediateClosedEdgeOpen` | Junctions at beginning and end of roadway are open, intermediate junctions are closed. |
        | `startOpenOthersClosed`             | First edge junction open, all others closed. |
        | `endOpenOthersClosed`             | Last edge junction open; all others closed. |

        The default value is `intermediateClosedEdgeOpen`.
      type: string
      enum:
      - allOpen
      - intermediateClosedEdgeOpen
      - allClosed
      default: intermediateClosedEdgeOpen
      example: allClosed
    Lane:
      description: 'Information about Lane Level Traffic.

'
      properties:
        laneNumbers:
          description: Identifier of the lane. Lane numbers use the HERE Map method
            of lane numbering where the left lane is 1 and each lane to the right
            of the left lane is numbered sequentially. For example, in a three-lane
            road, the left lane is 1, the center lane is 2, and the right lane is
            3. Lane 1 is always the left lane, regardless of the driving side. If
            multiple lane numbers are presented, all lanes will have the traffic condition.
            Lane numbers will always be sequential.
          type: array
          items:
            type: integer
          example: "[1,2]"
        laneType:
          "$ref": "#/components/schemas/LaneType"
        speedUncapped:
          "$ref": "#/components/schemas/SpeedUncapped"
        jamFactor:
          "$ref": "#/components/schemas/JamFactor"
      required:
      - laneNumbers
    LaneType:
      description: |
        Identifies type of the lane, with the following possible values.
        |    Type    | Description |
        |------------|-------------|
        | 'hov'      | Indicates a high-occupancy vehicle lane |
      type: string
      enum:
      - hov
      example: hov
    Lanes:
      description: |
        Provided only if there are different lane speeds along a roadway.

        The `Lane` message contains information about the speed of traffic in individual lanes in a roadway.
        The number of lanes along a roadway can be determined by looking at the maximum lane number in all `Lane` messages in the
        segment.
      type: array
      items:
        "$ref": "#/components/schemas/Lane"
    Length:
      description: Distance in meters between the beginning and end of a roadway or
        sub-segment.
      type: number
      minimum: 0
    LocalizedString:
      description: String with language code.
      properties:
        value:
          description: String written in the language specified in the language property.
          type: string
        language:
          description: Language in BCP47 format
          type: string
      required:
      - value
      - language
      example:
        value: InvalidenstraÃe
        language: de
    Location:
      description: |
        Defines the location affected by traffic flow or incident.

        There are a number of location reference schemes which may be used depending on the
        `locationReferencing` parameter provided in the request and the type of the roadway.
      type: object
      properties:
        description:
          description: A description of the location.
          type: string
          example: Eppendorfer Stieg
        length:
          description: Total length (in meters) of the roadway represented by this
            location.
          allOf:
          - "$ref": "#/components/schemas/Length"
          example: 47.2
        olr:
          "$ref": "#/components/schemas/LocationOpenLR"
        tmc:
          "$ref": "#/components/schemas/LocationTMC"
        shape:
          "$ref": "#/components/schemas/LocationShape"
      required:
      - length
    LocationDescriptionParts:
      description: Parts that make up the location description.
      properties:
        proximityType:
          type: string
          enum:
          - 'on'
          - at
          - between
          - approaching
          - past
          - ramp
          description: |
            Specifies the type of location proximity.
            | Type          | Description |
            |---------------|-------------|
            | `on`          | Only information about the road on which the incident occurs on is available |
            | `at`          | In addition to the `roadName` field, `intersectingRoadName` will provide a reference point close to the incident |
            | `between`     | The incident occurs between `intersectingRoadName` and `endIntersectingRoadName` |
            | `approaching` | The incident occurs before `intersectingRoadName` |
            | `past`        | The incident occurs after `intersectingRoadName` |
            | `ramp`        | The incident occurs on a ramp |
        roadName:
          type: string
          description: The name of the roadway that the incident occurs on.
        intersectingRoadName:
          type: string
          description: The name of an intersecting roadway that serves as a reference.
        endIntersectingRoadName:
          type: string
          description: |
            The name of a second intersecting roadway that serves as a reference. If this value is
            present, the reference will be to the end of the section affected by the incident and
            `intersectingRoadName` will be at the beginning of the affected section.
        endRoadName:
          type: string
          description: |
            In case the roadway affected by the incident changes names from the beginning to the
            end of the affected section, this will be the name at the end and `roadName` will be
            the name at the beginning.
        direction:
          type: string
          description: The direction of the travel affected by the incident.
      required:
      - proximityType
      - roadName
    LocationOpenLR:
      description: |
        TPEG OpenLR encoded as Base 64 strings.
        TPEG OpenLR location referencing is a TISA standard. Please visit https://tisa.org/ for more details. TISA Specifications are also published by
        ISO https://www.iso.org/
        Specifications: ISO/TS 21219-22:2017
      type: string
      example: CCkBEAAlJAg5ACJIJAAJBQQCAnsACgUEApJ2AAEh94kACQUEAgL7ADA+AA==
    LocationShape:
      description: 'Defines a location by a series of geo-coordinate describing the
        shape of the roadway.

'
      type: object
      properties:
        links:
          type: array
          items:
            "$ref": "#/components/schemas/LocationShapeLink"
      required:
      - links
    LocationShapeLink:
      description: 'Points describing a single link. At least 2 points will be present
        in each link.

'
      type: object
      properties:
        points:
          type: array
          items:
            description: Single point
            type: object
            properties:
              lat:
                description: Latitude of the point.
                type: number
                example: 52.55126
              lng:
                description: Longitude of the point
                type: number
                example: 13.37715
            required:
            - lat
            - lng
        length:
          description: |
            Length (in meters) of shape link. The sum of all links will add up to the length of the
            parent `Location` object.
          allOf:
          - "$ref": "#/components/schemas/Length"
          example: 104.32
      required:
      - points
      - length
    LocationTMC:
      description: |
        Location reference in TMC format. This type of location reference can only be provided on
        roadways that are part of the TMC definition.

        TMC Location referencing specification can be obtained from https://www.iso.org/
        Specifications: ISO 14819-3:2013
      type: object
      properties:
        extendedCountryCode:
          description: |
            The Extended Country Code may be used together with the EBU Country Code to uniquely
            identify a country worldwide.
          type: string
          example: E0
        ebuCountryCode:
          description: |
            TMC Country Code. Worldwide there may be conflicts in the EBU Country Code, however the
            combination of the `extendedCountryCode` and `ebuCountryCode` is unique.
          type: string
          example: D
        tableId:
          description: |
            Regional TMC table identifier. For example, Philadelphia/Eastern PA is 3 and the only
            table in Germany is 1.
          type: integer
        locationId:
          description: Unique location identifier within a table.
          type: integer
          example: 10288
        queuingDirection:
          description: |
            This represents the TMC queuing direction of traffic in positive or negative notation.
            Therefore, if the direction of travel is Eastbound (+), the queuing direction will be
            Westbound (-).
          type: string
          enum:
          - "-"
          - "+"
          example: "+"
        extent:
          description: |
            The extent indicates the number of adjacent TMC locations that are also affected by the event.
            When the event affects only one TMC location that is specified by the `locationId`, the extent is zero.

            Locations are counted in the driving direction.
          type: integer
          default: 1
          minimum: 0
          example: 3
        primaryOffset:
          description: |
            Distance in meters from the end of the Primary TMC, where the end point of the TMC is
            the last link associated with the TMC in the driving direction.
          allOf:
          - "$ref": "#/components/schemas/Length"
          default: 0
          example: 23.2
        affectedLength:
          description: |
            Length in meters of the affected location. This field will only be populated if the
            entire TMC is **not** covered.
          allOf:
          - "$ref": "#/components/schemas/Length"
          default: 0
          example: 107.2
      required:
      - extendedCountryCode
      - ebuCountryCode
      - tableId
      - locationId
      - queuingDirection
    OccupancyRestriction:
      description: A restriction on the number of persons in the vehicle that can
        pass through an area.
      type: object
      properties:
        lessThan:
          type: number
          example: 10
        greaterThan:
          type: number
          example: 10
      minProperties: 1
      maxProperties: 1
    PlateNumberRestriction:
      description: |
        The type of plate that is restricted.

        Possible plate types are:
        | Plate Type |
        |---------------|
        | `evenNumberPlate` |
        | `oddNumberPlate` |
      type: string
      enum:
      - evenNumberPlate
      - oddNumberPlate
      example: evenNumberPlate
    SizeRestriction:
      description: A restriction on the size of a vehicle in centimeters that can
        pass through an area.
      type: object
      properties:
        dimension:
          description: |
            The dimension that is restricted.

            Possible dimeniosn are:
            | Dimension | Description            |
            |-----------|------------------------|
            | `height`  | Vehicle height |
            | `length`  | Vehicle length |
            | `width`   | Vehicle width  |
          type: string
          enum:
          - height
          - length
          - width
          example: height
        lessThan:
          type: number
          example: 10
        greaterThan:
          type: number
          example: 10
      minProperties: 2
      maxProperties: 2
      required:
      - dimension
    SpeedCapped:
      description: |
        The average speed (in meters per second), capped by the speed limit, that current
        traffic is travelling.
      type: number
      minimum: 0
      example: 60
    SpeedUncapped:
      description: |
        The average speed (in meters per second), not capped by the speed limit, that current
        traffic is travelling.
      type: number
      minimum: 0
      example: 80
    SubSegment:
      description: 'Flow information for a sub-segment of a defined roadway.

'
      type: object
      properties:
        length:
          "$ref": "#/components/schemas/Length"
        speed:
          "$ref": "#/components/schemas/SpeedCapped"
        speedUncapped:
          "$ref": "#/components/schemas/SpeedUncapped"
        freeFlow:
          "$ref": "#/components/schemas/FreeFlow"
        jamFactor:
          "$ref": "#/components/schemas/JamFactor"
        jamTendency:
          "$ref": "#/components/schemas/JamTendency"
        confidence:
          "$ref": "#/components/schemas/Confidence"
        traversability:
          "$ref": "#/components/schemas/Traversability"
        junctionTraversability:
          "$ref": "#/components/schemas/JunctionTraversability"
        lanes:
          "$ref": "#/components/schemas/Lanes"
      required:
      - length
      - freeFlow
      - jamFactor
    SubSegments:
      description: |
        Provided only if the current flow information is more precise than the road defined.

        If sub-segments are provided, the length of all sub-segments will add up to the length of
        the corresponding location.
      type: array
      items:
        "$ref": "#/components/schemas/SubSegment"
    Time:
      type: string
      description: "**RFC 3339**, section 5.6 as defined by either `date-time` or
        `date-only` 'T' `partial-time` (ie no time-offset)."
      format: date-time
    TrafficTypeRestriction:
      description: |
        The type of traffic that is restricted.

        Possible traffic types are:
        | Traffic Type |
        |---------------|
        | `residentsTraffic` |
        | `throughTraffic` |
        | `noThrough` |
      type: string
      enum:
      - throughTraffic
      - residentsTraffic
      - noThrough
      example: residentsTraffic
    Traversability:
      description: |
        Indicates whether this roadway can be driven. The possible values are given in the following
        table.

        | Traversability          | Description |
        |-------------------------|-------------|
        | `open`                  | Roadway is open and can be driven. |
        | `closed`                | Roadway is closed (blocked) and cannot be driven. |
        | `reversibleNotRoutable` | The roadway is reversible but it is currently not routable. See below for further information. |

        This traversability status is the best source of information when routing through reversible
        lanes. This data will be more accurate than any other source, including the base map data,
        as published reversible information can be changed based on daily traffic flow or special
        events.

        The application can deal with reversible not routable in any way, but it is recommended
        that it is used to indicate not routable and to not show traffic on this roadway in map
        display.

        For reversible roads, both directions will be not routable for portions of the day when the
        road direction is being switched.  There is a possibility that portions of a reversible
        road will be marked a `closed` rather than `reversibleNotRoutable`; when this happens, both
        directions of the reversible will be closed, which can happen for construction or major
        accidents.

        The default value is `open`.
      type: string
      enum:
      - open
      - closed
      - reversibleNotRoutable
      default: open
      example: open
    VehicleRestriction:
      description: A single vechile restriction with vehicle and restriction types.
        Vehicles matching both the vehicle type and the restriction rules are NOT
        allowed to pass through the area. e.g. a "weight restriction" of "greaterThan"
        2000 Kg means that vehicles weighing more than 2000 Kg cannot pass.
      properties:
        vehicleType:
          "$ref": "#/components/schemas/VehicleType"
        restriction:
          properties:
            size:
              "$ref": "#/components/schemas/SizeRestriction"
            weight:
              "$ref": "#/components/schemas/WeightRestriction"
            carOccupancy:
              "$ref": "#/components/schemas/OccupancyRestriction"
            emissionType:
              "$ref": "#/components/schemas/EmissionRestriction"
            equipmentType:
              "$ref": "#/components/schemas/EquipmentTypeRestriction"
            fuelType:
              "$ref": "#/components/schemas/FuelTypeRestriction"
            trafficType:
              "$ref": "#/components/schemas/TrafficTypeRestriction"
            plateType:
              "$ref": "#/components/schemas/PlateNumberRestriction"
          minProperties: 1
          maxProperties: 1
          example:
            size:
              dimension: height
              lessThan: 200.0
    VehicleType:
      description: |
        Type of the vehicle an incident restriction applies to.

        | Type              |
        |-------------------|
        | 'bus' |
        | 'car' |
        | 'heavyGoodsVehicle' |
        | 'lorry' |
        | 'motorcycle' |
        | 'motorVehicle' |
        | 'taxi' |
        | 'train' |
        | 'transportingAnAbnormalSizeLoad' |
        | 'transportingHazardousGoods' |
        | 'vehicleWithTrailer' |
        | 'other' |
      type: string
      enum:
      - bus
      - car
      - heavyGoodsVehicle
      - lorry
      - motorcycle
      - motorVehicle
      - taxi
      - train
      - transportingAnAbnormalSizeLoad
      - transportingHazardousGoods
      - vehicleWithTrailer
      - other
      example: motorVehicle
    VersionResponse:
      description: Returns the versions of the service components.
      properties:
        apiVersion:
          type: string
          description: The current version of the API.
          example: 7.2.0
        serviceVersion:
          type: string
          description: The current version of the service.
          example: 7.2.0
      required:
      - apiVersion
    OpenApiResponse:
      description: API response for the openapi endpoint
      type: object
      additionalProperties: true
    WeightRestriction:
      description: A restriction on the weight of a vehicle in kilograms that can
        pass through an area.
      type: object
      properties:
        weightType:
          description: |
            The type of weight that is restricted.

            Possible weight types are:
            | Weight Type | Description            |
            |-----------|------------------------|
            | `weightPerAxle`  | Weight per axle |
            | `grossWeight`  | Vehicle weight including trailers and shipped good |
          type: string
          enum:
          - grossWeight
          - weightPerAxle
          example: grossWeight
        lessThan:
          type: number
          example: 2000
        greaterThan:
          type: number
          example: 2000
      minProperties: 2
      maxProperties: 2
      required:
      - weightType
  responses:
    ErrorResponseInternalServerError:
      description: API response in case of internal server error.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorResponseExampleInternalServerError"
    ErrorResponseBadGateway:
      description: API response in case of bad gateway.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorResponseExampleBadGateway"
    ErrorResponseServiceUnavailable:
      description: API response in case of service unavailable.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorResponseExampleServiceUnavailable"
    ErrorResponseGatewayTimeout:
      description: API response in case of gateway timeout.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorResponseExampleGatewayTimeout"
    RequestUriTooLong:
      description: API response in case of too long uri.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorResponseExampleUriTooLong"
    FlowResponseOk:
      description: Flow response in case of success
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/FlowResponse"
    FlowResponseInvalidRequest:
      description: |
        Failure to parse the request, caused by, for example, invalid parameter values such as
        `in=planet:mars`.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorFlowResponseExampleInvalidRequest"
    FlowResponseNotAllowed:
      description: 'Not allowed, such as trying to request fields without having the
        necessary permissions.

'
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/AuthError"
          example:
            error: Forbidden
            error_description: 'These credentials do not authorize access. Please
              contact your customer representative or submit a request here https://developer.here.com/contact-us
              to upgrade your account. You can also get valid credentials by registering
              for a free trial license on https://developer.here.com.

'
    FlowResponseAuthenticationFailed:
      description: 'Authentication Failed

'
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/AuthError"
          example:
            error: Unauthorized
            error_description: Token Validation Failure - invalid time in token
    FlowResponseInternalServerError:
      description: Internal server error.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorFlowResponseExampleInternalServerError"
    HealthResponseFail:
      description: API response in case of failure.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/HealthResponseFail"
    HealthResponseOk:
      description: API response in case of success.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/HealthResponseOK"
    IncidentsResponseOk:
      description: Incidents response in case of success
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/IncidentsResponse"
    IncidentItemResponseOk:
      description: Incident item response for specified original id
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/IncidentItem"
    IncidentsResponseInvalidRequest:
      description: |
        Failure to parse the request, caused by, for example, invalid parameter values such as
        `in=planet:mars`.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorIncidentsResponseExampleInvalidRequest"
    IncidentsResponseNotAllowed:
      description: 'Not allowed, such as trying to request fields without having the
        necessary permissions.

'
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/AuthError"
          example:
            error: Forbidden
            error_description: 'These credentials do not authorize access. Please
              contact your customer representative or submit a request here https://developer.here.com/contact-us
              to upgrade your account. You can also get valid credentials by registering
              for a free trial license on https://developer.here.com.

'
    IncidentResponseAuthenticationFailed:
      description: 'Authentication Failed

'
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/AuthError"
          example:
            error: Unauthorized
            error_description: Token Validation Failure - invalid time in token
    IncidentsResponseInternalServerError:
      description: Internal server error.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorIncidentsResponseExampleInternalServerError"
    ResponseServiceUnavailableError:
      description: Service unavailable.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorResponseExampleServiceUnavailableError"
    VersionResponseOk:
      description: API response in case of success.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/VersionResponse"
    OpenApiResponseOk:
      description: API response in case of success.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/OpenApiResponse"
          examples:
            openapi:
              "$ref": "#/components/examples/OpenApiResponse"
        application/x-yaml:
          schema:
            allOf:
            - "$ref": "#/components/schemas/OpenApiResponse"
          examples:
            openapi:
              "$ref": "#/components/examples/OpenApiResponse"
    IncidentItemResponseInvalidRequest:
      description: 'Failure to parse the request, it may have invalid incident id
        or query parameters.

'
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorIncidentItemResponseExampleInvalidId"
    IncidentItemResponseNotFound:
      description: |
        Failure to parse the request, caused by, for example, invalid parameter values such as
        `in=planet:mars`.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/ErrorIncidentItemResponseExampleNotFound"
    UnauthorizedErrorResponse:
      description: API response in case of unauthorized access.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/AuthError"
          examples:
            errorResponseExample:
              "$ref": "#/components/examples/UnauthorizedErrorResponse"
    ErrorResponse:
      description: API response in case of errors.
      headers:
        X-Correlation-Id:
          "$ref": "#/components/headers/X-Correlation-Id"
        X-Request-Id:
          "$ref": "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ErrorResponse"
  examples:
    ErrorResponseExampleInternalServerError:
      value:
        title: Internal server error
        status: 500
        code: E608666
        cause: Internal Server Error
        action: please contact system administrator
        correlationId: 895f87ec-5373-4940-b9c0-670f5b8da682
    ErrorResponseExampleBadGateway:
      value:
        title: 'failed with reason: bad gateway'
        status: 502
        code: E600002
        cause: Bad Gateway
        action: ''
        correlationId: ''
    ErrorResponseExampleServiceUnavailable:
      value:
        title: Traffic information failure
        status: 503
        code: E608021
        cause: failed to fetch traffic information
        action: try again later or contact system administrator
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
    ErrorResponseExampleGatewayTimeout:
      value:
        title: 'failed with reason: gateway timeout'
        status: 504
        code: E600000
        cause: Gateway Timeout
        action: ''
        correlationId: ''
    ErrorResponseExampleUriTooLong:
      value:
        title: Malformed request
        status: 414
        code: E608045
        cause: Request URI is too long. Actual length is 1001 while maximal allowed
          is 1000
        action: request must adhere to API specification
        correlationId: SAMPLE_CORRELATION_ID
    ErrorIncidentsResponseExampleInvalidRequest:
      value:
        title: Malformed request
        status: 400
        code: E608002
        cause: parameter `in` is missing
        action: request must adhere to API specification
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
    ErrorIncidentsResponseExampleInternalServerError:
      value:
        title: Internal server error
        status: 500
        code: E608666
        cause: Internal Server Error
        action: please contact system administrator
        correlationId: 895f87ec-5373-4940-b9c0-670f5b8da682
    ErrorResponseExampleServiceUnavailableError:
      value:
        title: Traffic information failure
        status: 503
        code: E608021
        cause: failed to fetch traffic information
        action: try again later or contact system administrator
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
    ErrorFlowResponseExampleInvalidRequest:
      value:
        title: Malformed request
        status: 400
        code: E608002
        cause: parameter `in` is missing
        action: request must adhere to API specification
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
    ErrorFlowResponseExampleInternalServerError:
      value:
        title: Internal server error
        status: 500
        code: E608666
        cause: Internal Server Error
        action: please contact system administrator
        correlationId: 895f87ec-5373-4940-b9c0-670f5b8da682
    ErrorIncidentItemResponseExampleInvalidId:
      value:
        title: Malformed request
        status: 400
        code: E608039
        cause: Incident id failed validation
        action: request must contain valid incident id
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
    ErrorIncidentItemResponseExampleNotFound:
      value:
        title: Incident item not found or removed from system
        status: 404
        code: E608038
        cause: Incident item for given id not found
        action: request must contain valid incident id
        correlationId: 87a6fe3b-6290-41db-8d79-edf4f4019a74
    OpenApiResponse:
      value:
        openapi: 3.0.2
        info:
          title: Reference API v2
        servers: {}
        paths: {}
    UnauthorizedErrorResponse:
      value:
        error: Unauthorized
        error_description: No credentials found
