openapi: 3.0.0
info:
  title: Nuitée API
  version: 1.4.2
  description : '<p><b>Nuitée API</b> is a fast and simple Hotel distribution API that allows you to develop your own connectivity and integrate our hotels to travel websites / mobile apps or content management systems,  with instant access to over <b>600,000</b> branded and independent hotels worldwide.</p>
<p><b>Nuitée API</b> is delivered via HTTPS POST requests. Request and response data can be in either XML or JSON (preferred) allowing you to easily build requests and parse responses in a standard way by using the tools included with most of the modern languages.</p>

    <h1>Getting started</h1>
    <h2>Nuitee certification process</h2>
    <h3>Step 1: Expected Workflows </h3>
    <p>Nuitee API Workflows are mandatory for verifying the integration done by client.
    <ul>
      <li>Search</li>  
      <li>PreBook</li>
      <li>Book</li>
      <li>Retrieve</li>
      <li>Cancel</li>
    </ul>
    </p>
    <h3>Step 2: Test Cases </h3>
    <p>Here we are providing a list of test cases to be executed by clients. Requests and Responses XMLs for these cases will be required for certification process verification. </p>
    <ul>
    <li>1 room with 2 adult.</li>
    <li>2 rooms with 2 adults each.</li>
    <li>1 room with 3 adults 2 children of ages 2 and 9.</li>
    <li>2 rooms with 3 adults 1 child of age 10 and 2 adults 2 children of ages 5 and 12.</li>
    </ul>
    <h3>Step 3: Certification Request (Optional) (If step 5 can be applicable, step 3 and step 4 are omitted)</h3>
    <p>Client makes a certification request by providing Requests and Responses XMLs for every Nuitee API Workflow for the test cases as mentioned above in Step 1 and Step 2. </p>
    <h3>Step 4: Test Cases Verification (Optional)</h3>
    <p>Our team will verify the provided test cases XMLs and suggest if there are any changes required. </p>
    <h3>Step 5: Client Application Testing </h3>
    <p>After completion of step 4, our team will ask client to provide access to the client’s integrated website for final tests. </p>
    <h3>Step 6: Live Access </h3>
    <p>Once the testing is successfully completed, we provide you with the production database as well as the credentials to do live bookings. </p>
    <br>
    <h2>Generate a secret key</h2>
    <p>Every call needs a secrect. In order to generate one your are going to create one:</p>
    <ol>
      <li>Create timestamp divide it by 1000 and round it</li>
      <li>SHA512 Encrypt  (apiKey + Shared_Secret + timestamp (GMT) ) </li>
      <li>Set headers Authorization="signature={hash}, timestamp={timestamp}"</li>
    </ol>

<p>We highly recommend you to check the different alternatives <b>Nuitée API</b> can offer you to make sure you are choosing the best option for your project.</p>
<p>Use our <a href="Nuitee-Postman.zip" target="_blank">postman collection</a> to try our APIs now.</p>

  <h3>Sandbox:</h3>
  <ul>
    <li><b>Search:</b> http://sandbox.nuitee.com</li>
    <li><b>Prebook:</b> http://prebook.sandbox.nuitee.com</li>
    <li><b>Book:</b> http://book.sandbox.nuitee.com</li>
    <li><b>Retreive:</b> http://book.sandbox.nuitee.com</li>
    <li><b>Cancel:</b> http://book.sandbox.nuitee.com</li>
  </ul>
  
  <h3>Live:</h3>
  <ul>
    <li><b>Search:</b> http://ws.nuitee.com</li>
    <li><b>Prebook:</b> http://prebook.nuitee.com</li>
    <li><b>Book:</b> http://book.nuitee.com</li>
    <li><b>Retreive:</b> http://book.nuitee.com</li>
    <li><b>Cancel:</b> http://book.nuitee.com</li>
  </ul>
'
servers:
  - url: 'http://sandbox.nuitee.com'
  - url: 'http://ws.nuitee.com'
paths:
  "/nuitee/2.0/booking/search":
    post:
      tags:
        - Booking Flow
      summary: Search
      x-codeSamples:
        - lang: 'NodeJS - axios'
          source: |
            var axios = require('axios');
            var data = JSON.stringify({"login":{"language":"en_US","password":"","userName":""},"checkInDate":"2021-01-29","checkOutDate":"2021-01-30","hotelCodes":[125637],"roomGuests":{"roomGuests":[{"adultCount":2,"childCount":0},{"adultCount":1,"childCount":1,"childAges":[3]}]},"guestNationality":"US","currency":"USD","languageCode":"en_US","timeout":"20000"});

            var config = {
              method: 'post',
              url: 'http://sandbox.nuitee.com/nuitee/booking/searchAvailability',
              headers: { 
                'Content-Type': 'application/json', 
                'Accept': 'application/json'
              },
              data : data
            };

            axios(config)
            .then(function (response) {
              console.log(JSON.stringify(response.data));
            })
            .catch(function (error) {
              console.log(error);
            });
        - lang: PHP
          source: |
            <?php
            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "http://sandbox.nuitee.com/nuitee/booking/searchAvailability",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS =>"{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"checkInDate\": \"2021-01-29\",\r\n\t\"checkOutDate\": \"2021-01-30\",\r\n\t\"hotelCodes\": [125637],\r\n\t\"roomGuests\": {\r\n\t\t\"roomGuests\": [\r\n\t\t\t{\r\n\t\t\t\t\"adultCount\": 2,\r\n\t\t\t\t\"childCount\": 0\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"adultCount\": 1,\r\n\t\t\t\t\"childCount\":1,\r\n                \"childAges\" : [3]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"guestNationality\": \"US\",\r\n\t\"currency\": \"USD\",\r\n\t\"languageCode\": \"en_US\",\r\n\t\"timeout\": \"20000\"\r\n}",
              CURLOPT_HTTPHEADER => array(
                "Content-Type: application/json",
                "Accept: application/json"
              ),
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;
        - lang: 'Go - Native'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://sandbox.nuitee.com/nuitee/booking/searchAvailability"
              method := "POST"

              payload := strings.NewReader("{
            \n  \"login\": {
            \n    \"language\": \"en_US\",
            \n    \"password\": \"\",
            \n    \"userName\": \"\"
            \n  },
            \n  \"checkInDate\": \"2021-01-29\",
            \n  \"checkOutDate\": \"2021-01-30\",
            \n  \"hotelCodes\": [125637],
            \n  \"roomGuests\": {
            \n    \"roomGuests\": [
            \n      {
            \n        \"adultCount\": 2,
            \n        \"childCount\": 0
            \n      },
            \n      {
            \n        \"adultCount\": 1,
            \n        \"childCount\":1,
            \n                \"childAges\" : [3]
            \n      }
            \n    ]
            \n  },
            \n  \"guestNationality\": \"US\",
            \n  \"currency\": \"USD\",
            \n  \"languageCode\": \"en_US\",
            \n  \"timeout\": \"20000\"
            \n}")

              client := &http.Client {
              }
              req, err := http.NewRequest(method, url, payload)

              if err != nil {
                fmt.Println(err)
              }
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Accept", "application/json")

              res, err := client.Do(req)
              defer res.Body.Close()
              body, err := ioutil.ReadAll(res.Body)

              fmt.Println(string(body))
            }
        - lang: Python - Requests
          source: |
            import requests

            url = "http://sandbox.nuitee.com/nuitee/booking/searchAvailability"

            payload = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"checkInDate\": \"2021-01-29\",\r\n\t\"checkOutDate\": \"2021-01-30\",\r\n\t\"hotelCodes\": [125637],\r\n\t\"roomGuests\": {\r\n\t\t\"roomGuests\": [\r\n\t\t\t{\r\n\t\t\t\t\"adultCount\": 2,\r\n\t\t\t\t\"childCount\": 0\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"adultCount\": 1,\r\n\t\t\t\t\"childCount\":1,\r\n                \"childAges\" : [3]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"guestNationality\": \"US\",\r\n\t\"currency\": \"USD\",\r\n\t\"languageCode\": \"en_US\",\r\n\t\"timeout\": \"20000\"\r\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data = payload)

            print(response.text.encode('utf8'))
        - lang: Swift - URLSession
          source: |
            import Foundation

            var semaphore = DispatchSemaphore (value: 0)

            let parameters = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"checkInDate\": \"2021-01-29\",\r\n\t\"checkOutDate\": \"2021-01-30\",\r\n\t\"hotelCodes\": [125637],\r\n\t\"roomGuests\": {\r\n\t\t\"roomGuests\": [\r\n\t\t\t{\r\n\t\t\t\t\"adultCount\": 2,\r\n\t\t\t\t\"childCount\": 0\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"adultCount\": 1,\r\n\t\t\t\t\"childCount\":1,\r\n                \"childAges\" : [3]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"guestNationality\": \"US\",\r\n\t\"currency\": \"USD\",\r\n\t\"languageCode\": \"en_US\",\r\n\t\"timeout\": \"20000\"\r\n}"
            let postData = parameters.data(using: .utf8)

            var request = URLRequest(url: URL(string: "http://sandbox.nuitee.com/nuitee/booking/searchAvailability")!,timeoutInterval: Double.infinity)
            request.addValue("application/json", forHTTPHeaderField: "Content-Type")
            request.addValue("application/json", forHTTPHeaderField: "Accept")

            request.httpMethod = "POST"
            request.httpBody = postData

            let task = URLSession.shared.dataTask(with: request) { data, response, error in 
              guard let data = data else {
                print(String(describing: error))
                return
              }
              print(String(data: data, encoding: .utf8)!)
              semaphore.signal()
            }

            task.resume()
            semaphore.wait()
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAvalability'
        description: '
        This method is used to request **room availability**. Some filters and special features can be applied before sending an availability request.

        A flexible date search allows customers to retrieve available rates for a specified number of days prior to and post check-in.

        The response generated is a list of hotels with the different room types, board types, cancellation policies, and rates available for those hotels.

        BookingAPI prices are final. Our rates include supplements and discounts and no additional price calculations are required except fees that are payable at the hotel. 

        It can also return cancellation fees in the availability response, providing amounts and dates at the first step of the booking.'
        required: true
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    sessionId:
                      type: string
                      description : ''
                    city:
                      $ref: "#/components/schemas/City"
                    checkInDate:
                      type: string
                      description : Check-in date.
                    checkOutDate:
                      type: string
                      description : Check-out date.
                    currency:
                      type: string
                      description: 'Example: USD , EUR'
                    roomGuests:
                      $ref: '#/components/schemas/RoomGuests'
                    hotelResults:
                      $ref: '#/components/schemas/HotelResults'
  "/nuitee/2.0/booking/prebook":
    post:
      tags:
        - Booking Flow
      summary: Prebook
      x-codeSamples:
        - lang: 'NodeJS - axios'
          source: |
            var axios = require('axios');
            var data = JSON.stringify({"sessionId":"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW","hotelCode":"125637","rateDetailCode":"21-125637|RFN|20210126|1|20433","confirmedRooms":{"confirmedRooms":[{"boardId":"RO","roomCode":"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1"},{"boardId":"RO","roomCode":"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|2"}]},"timeout":"20000"});

            var config = {
              method: 'post',
              url: 'http://sandbox.nuitee.com/nuitee/booking/confirmPropertyAvailability',
              headers: { 
                'Content-Type': 'application/json', 
                'Accept': 'application/json'
              },
              data : data
            };

            axios(config)
            .then(function (response) {
              console.log(JSON.stringify(response.data));
            })
            .catch(function (error) {
              console.log(error);
            });

        - lang: PHP
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "http://sandbox.nuitee.com/nuitee/booking/confirmPropertyAvailability",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS =>"{\r\n\t\"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",\r\n\t\"hotelCode\": \"125637\",\r\n\t\"rateDetailCode\": \"21-125637|RFN|20210126|1|20433\",\r\n\t\"confirmedRooms\": {\r\n\t\t\"confirmedRooms\": [\r\n\t\t\t{\r\n\t\t\t\t\"boardId\": \"RO\",\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"boardId\": \"RO\",\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|2\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\r\n\t\"timeout\": \"20000\"\r\n}",
              CURLOPT_HTTPHEADER => array(
                "Content-Type: application/json",
                "Accept: application/json"
              ),
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;

        - lang: 'Go - Native'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://sandbox.nuitee.com/nuitee/booking/confirmPropertyAvailability"
              method := "POST"

              payload := strings.NewReader("{
            \n  \"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",
            \n  \"hotelCode\": \"125637\",
            \n  \"rateDetailCode\": \"21-125637|RFN|20210126|1|20433\",
            \n  \"confirmedRooms\": {
            \n    \"confirmedRooms\": [
            \n      {
            \n        \"boardId\": \"RO\",
            \n        \"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\"
            \n      },
            \n      {
            \n        \"boardId\": \"RO\",
            \n        \"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|2\"
            \n      }
            \n    ]
            \n  },
            \n  
            \n  \"timeout\": \"20000\"
            \n}")

              client := &http.Client {
              }
              req, err := http.NewRequest(method, url, payload)

              if err != nil {
                fmt.Println(err)
              }
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Accept", "application/json")

              res, err := client.Do(req)
              defer res.Body.Close()
              body, err := ioutil.ReadAll(res.Body)

              fmt.Println(string(body))
            }
        - lang: Python - Requests
          source: |
            import requests

            url = "http://sandbox.nuitee.com/nuitee/booking/confirmPropertyAvailability"

            payload = "{\r\n\t\"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",\r\n\t\"hotelCode\": \"125637\",\r\n\t\"rateDetailCode\": \"21-125637|RFN|20210126|1|20433\",\r\n\t\"confirmedRooms\": {\r\n\t\t\"confirmedRooms\": [\r\n\t\t\t{\r\n\t\t\t\t\"boardId\": \"RO\",\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"boardId\": \"RO\",\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|2\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\r\n\t\"timeout\": \"20000\"\r\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data = payload)

            print(response.text.encode('utf8'))

        - lang: Swift - URLSession
          source: |
            import Foundation

            var semaphore = DispatchSemaphore (value: 0)

            let parameters = "{\r\n\t\"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",\r\n\t\"hotelCode\": \"125637\",\r\n\t\"rateDetailCode\": \"21-125637|RFN|20210126|1|20433\",\r\n\t\"confirmedRooms\": {\r\n\t\t\"confirmedRooms\": [\r\n\t\t\t{\r\n\t\t\t\t\"boardId\": \"RO\",\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"boardId\": \"RO\",\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|2\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\r\n\t\"timeout\": \"20000\"\r\n}"
            let postData = parameters.data(using: .utf8)

            var request = URLRequest(url: URL(string: "http://sandbox.nuitee.com/nuitee/booking/confirmPropertyAvailability")!,timeoutInterval: Double.infinity)
            request.addValue("application/json", forHTTPHeaderField: "Content-Type")
            request.addValue("application/json", forHTTPHeaderField: "Accept")

            request.httpMethod = "POST"
            request.httpBody = postData

            let task = URLSession.shared.dataTask(with: request) { data, response, error in 
              guard let data = data else {
                print(String(describing: error))
                return
              }
              print(String(data: data, encoding: .utf8)!)
              semaphore.signal()
            }

            task.resume()
            semaphore.wait()
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPropertyAvailability'
        description: "query for ConfirmPropertyAvailability"
        required: true
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    sessionId:
                      type: string
                      description : 'sessionId is a code generated from the API'
                    city:
                      $ref: "#/components/schemas/City"
                    checkInDate:
                      type: string
                      description : Check-in date.
                    checkOutDate:
                      type: string
                      description : Check-out date.
                    currency:
                      type: string
                      description: 'Example: USD , EUR'
                    roomGuests:
                      $ref: '#/components/schemas/RoomGuests'
                    availableForConfirmedBooking:
                      type: boolean
                      description: available for confirmed booking
                    availableForReservedBooking:
                      type: boolean
                      description: available for reserved booking
                    hotelInfo:
                      $ref: '#/components/schemas/HotelInfo'
                    roomAvailability:
                      type: object
                      description: Room availability
                      properties:
                        rooms:
                          $ref: '#/components/schemas/Room'   
                        minimumSellingTotalPrice:
                          description: Binding price
                          type: number
                        totalPrice: 
                          description: Net total price
                          type: number
                        priceChanged: 
                          description: Is price did change
                          type: boolean
                        priceHT: 
                          description: Price before taxes
                          type: number
                        tax: 
                          description: Tax price. Included in totalPrice
                          type: number
                        hotelFees: 
                          description: Fees payable at the hotel, not included in totalPrice
                          type: number
                    cancelPoliciesInfos:
                      $ref: '#/components/schemas/cancelPoliciesInfos'
                    confirmPropertyCode:
                      description: Confirmed property code, returned in prebook response
                      type: string
                    remarks:
                      description: Information / instruction concerning hotel and rates
                      type: string
  "/nuitee/2.0/booking/book":
    post:
      tags:
        - Booking Flow
      summary: Book
      x-codeSamples:
        - lang: 'NodeJS - axios'
          source: |
            var axios = require('axios');
            var data = JSON.stringify({"login":{"language":"en_US","password":"","userName":""},"sessionId":"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW","hotelCode":125637,"confirmPropertyCode":"21-03785980-6811-440a-b6b4-9f6297e78d87|20433","confirmedBooking":true,"clientIdentifier":"agency_booking_locator","holder":{"email":"example@example.com","firstName":"Zak","lastName":"Ben","titulation":"Mr"},"reservationInfo":{"customerRoomInfos":[{"roomCode":"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1","firstName":"Zak","lastName":"Ben","titulation":"Mr","customerComment":null},{"roomCode":"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1","firstName":"Issam","lastName":"Hicham","titulation":"Mr","customerComment":null}]},"billingInfo":{"paymentMethodType":"LIMIT"},"timeout":"60000"});

            var config = {
              method: 'post',
              url: 'http://sandbox.nuitee.com/nuitee/booking/confirmBooking',
              headers: { 
                'Content-Type': 'application/json', 
                'Accept': 'application/json'
              },
              data : data
            };

            axios(config)
            .then(function (response) {
              console.log(JSON.stringify(response.data));
            })
            .catch(function (error) {
              console.log(error);
            });

        - lang: PHP
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "http://sandbox.nuitee.com/nuitee/booking/confirmBooking",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS =>"{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",\r\n\t\"hotelCode\": 125637,\r\n\t\"confirmPropertyCode\": \"21-03785980-6811-440a-b6b4-9f6297e78d87|20433\",\r\n\t\"confirmedBooking\": true,\r\n\t\"clientIdentifier\": \"agency_booking_locator\",\r\n\t\"holder\": {\r\n\t\t\"email\": \"example@example.com\",\r\n\t\t\"firstName\": \"Zak\",\r\n\t\t\"lastName\": \"Ben\",\r\n\t\t\"titulation\": \"Mr\"\r\n\t},\r\n\t\"reservationInfo\": {\r\n\t\t\"customerRoomInfos\": [\r\n\t\t\t{\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",\r\n\t\t\t\t\"firstName\": \"Zak\",\r\n\t\t\t\t\"lastName\": \"Ben\",\r\n\t\t\t\t\"titulation\": \"Mr\",\r\n\t\t\t\t\"customerComment\": null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",\r\n\t\t\t\t\"firstName\": \"Issam\",\r\n\t\t\t\t\"lastName\": \"Hicham\",\r\n\t\t\t\t\"titulation\": \"Mr\",\r\n\t\t\t\t\"customerComment\": null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"billingInfo\" : {\r\n\t\t\"paymentMethodType\" : \"LIMIT\"\r\n\t},\r\n\t\"timeout\": \"60000\"\r\n}",
              CURLOPT_HTTPHEADER => array(
                "Content-Type: application/json",
                "Accept: application/json"
              ),
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;

        - lang: 'Go - Native'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://sandbox.nuitee.com/nuitee/booking/confirmBooking"
              method := "POST"

              payload := strings.NewReader("{
            \n  \"login\": {
            \n    \"language\": \"en_US\",
            \n    \"password\": \"\",
            \n    \"userName\": \"\"
            \n  },
            \n  \"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",
            \n  \"hotelCode\": 125637,
            \n  \"confirmPropertyCode\": \"21-03785980-6811-440a-b6b4-9f6297e78d87|20433\",
            \n  \"confirmedBooking\": true,
            \n  \"clientIdentifier\": \"agency_booking_locator\",
            \n  \"holder\": {
            \n    \"email\": \"example@example.com\",
            \n    \"firstName\": \"Zak\",
            \n    \"lastName\": \"Ben\",
            \n    \"titulation\": \"Mr\"
            \n  },
            \n  \"reservationInfo\": {
            \n    \"customerRoomInfos\": [
            \n      {
            \n        \"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",
            \n        \"firstName\": \"Zak\",
            \n        \"lastName\": \"Ben\",
            \n        \"titulation\": \"Mr\",
            \n        \"customerComment\": null
            \n      },
            \n      {
            \n        \"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",
            \n        \"firstName\": \"Issam\",
            \n        \"lastName\": \"Hicham\",
            \n        \"titulation\": \"Mr\",
            \n        \"customerComment\": null
            \n      }
            \n    ]
            \n  },
            \n  \"billingInfo\" : {
            \n    \"paymentMethodType\" : \"LIMIT\"
            \n  },
            \n  \"timeout\": \"60000\"
            \n}")

              client := &http.Client {
              }
              req, err := http.NewRequest(method, url, payload)

              if err != nil {
                fmt.Println(err)
              }
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Accept", "application/json")

              res, err := client.Do(req)
              defer res.Body.Close()
              body, err := ioutil.ReadAll(res.Body)

              fmt.Println(string(body))
            }
        - lang: Python - Requests
          source: |
            import requests

            url = "http://sandbox.nuitee.com/nuitee/booking/confirmBooking"

            payload = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",\r\n\t\"hotelCode\": 125637,\r\n\t\"confirmPropertyCode\": \"21-03785980-6811-440a-b6b4-9f6297e78d87|20433\",\r\n\t\"confirmedBooking\": true,\r\n\t\"clientIdentifier\": \"agency_booking_locator\",\r\n\t\"holder\": {\r\n\t\t\"email\": \"example@example.com\",\r\n\t\t\"firstName\": \"Zak\",\r\n\t\t\"lastName\": \"Ben\",\r\n\t\t\"titulation\": \"Mr\"\r\n\t},\r\n\t\"reservationInfo\": {\r\n\t\t\"customerRoomInfos\": [\r\n\t\t\t{\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",\r\n\t\t\t\t\"firstName\": \"Zak\",\r\n\t\t\t\t\"lastName\": \"Ben\",\r\n\t\t\t\t\"titulation\": \"Mr\",\r\n\t\t\t\t\"customerComment\": null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",\r\n\t\t\t\t\"firstName\": \"Issam\",\r\n\t\t\t\t\"lastName\": \"Hicham\",\r\n\t\t\t\t\"titulation\": \"Mr\",\r\n\t\t\t\t\"customerComment\": null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"billingInfo\" : {\r\n\t\t\"paymentMethodType\" : \"LIMIT\"\r\n\t},\r\n\t\"timeout\": \"60000\"\r\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data = payload)

            print(response.text.encode('utf8'))


        - lang: Swift - URLSession
          source: |
            import Foundation

            var semaphore = DispatchSemaphore (value: 0)

            let parameters = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"sessionId\": \"20210129|20210130|en_US|US|USD|2A0C/1A1C3|1487|tMGWy|1605113606041ymDW\",\r\n\t\"hotelCode\": 125637,\r\n\t\"confirmPropertyCode\": \"21-03785980-6811-440a-b6b4-9f6297e78d87|20433\",\r\n\t\"confirmedBooking\": true,\r\n\t\"clientIdentifier\": \"agency_booking_locator\",\r\n\t\"holder\": {\r\n\t\t\"email\": \"example@example.com\",\r\n\t\t\"firstName\": \"Zak\",\r\n\t\t\"lastName\": \"Ben\",\r\n\t\t\"titulation\": \"Mr\"\r\n\t},\r\n\t\"reservationInfo\": {\r\n\t\t\"customerRoomInfos\": [\r\n\t\t\t{\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",\r\n\t\t\t\t\"firstName\": \"Zak\",\r\n\t\t\t\t\"lastName\": \"Ben\",\r\n\t\t\t\t\"titulation\": \"Mr\",\r\n\t\t\t\t\"customerComment\": null\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"roomCode\": \"sO3ezpE/nW4jRbNjT1A5nKl/ZAu5lFk6sjSZryXMD4mANetOcbn1gAuCWVNRMnjC|1\",\r\n\t\t\t\t\"firstName\": \"Issam\",\r\n\t\t\t\t\"lastName\": \"Hicham\",\r\n\t\t\t\t\"titulation\": \"Mr\",\r\n\t\t\t\t\"customerComment\": null\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"billingInfo\" : {\r\n\t\t\"paymentMethodType\" : \"LIMIT\"\r\n\t},\r\n\t\"timeout\": \"60000\"\r\n}"
            let postData = parameters.data(using: .utf8)

            var request = URLRequest(url: URL(string: "http://sandbox.nuitee.com/nuitee/booking/confirmBooking")!,timeoutInterval: Double.infinity)
            request.addValue("application/json", forHTTPHeaderField: "Content-Type")
            request.addValue("application/json", forHTTPHeaderField: "Accept")

            request.httpMethod = "POST"
            request.httpBody = postData

            let task = URLSession.shared.dataTask(with: request) { data, response, error in 
              guard let data = data else {
                print(String(describing: error))
                return
              }
              print(String(data: data, encoding: .utf8)!)
              semaphore.signal()
            }

            task.resume()
            semaphore.wait()

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmBooking'
        description: "Book"
        required: true
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    sessionId: 
                      type: string
                    city:
                      $ref: "#/components/schemas/City"
                    checkInDate:
                      type: string
                      description : Check-in date.
                    checkOutDate:
                      type: string
                      description : Check-out date.
                    noOfNight: 
                      type: integer
                      format: int32
                    noOfRooms: 
                      type: integer
                      format: int32
                    currency:
                      type: string
                      description: 'Example: USD , EUR'
                    holder: 
                      type: object
                      properties: 
                        firstName: 
                          type: string
                        lastName: 
                          type: string
                        titulation: 
                          type: string
                        email: 
                          type: string
                    hotelInfo:
                      $ref: '#/components/schemas/HotelInfo'
                    roomDetails: 
                      type: object
                      properties: 
                        roomDetails: 
                          type: array
                          items: 
                            type: object
                            properties: 
                              firstName: 
                                type: string
                              lastName: 
                                type: string
                              adultCount: 
                                type: integer
                                format: int32
                              childCount: 
                                type: integer
                                format: int32
                              includedBoard: 
                                type: object
                                properties: 
                                  boardId: 
                                    type: string
                                  boardDescription: 
                                    type: string
                                  price: 
                                    type: string
                                    format: nullable
                              roomDescription: 
                                type: string
                              roomRate: 
                                type: object
                                properties: 
                                  initialPrice: 
                                    type: number
                                  price: 
                                    type: number
                                  initialPricePerNight: 
                                    type: array
                                    items: 
                                      type: number
                                  pricePerNight: 
                                    type: array
                                    items: 
                                      type: number
                                  promoDescription: 
                                    type: string
                                    format: nullable
                        totalRate: 
                          type: number
                        recommendedSellingTotalPrice: 
                          type: string
                          format: nullable
                    cancelPoliciesInfos:
                      $ref: '#/components/schemas/cancelPoliciesInfos'
                    bookingId: 
                      type: integer
                      format: int32
                    confirmationNumber: 
                      type: string
                    bookingStatus: 
                      type: string
                    bookingRemarks: 
                      type: string
                    roomGuests:
                      $ref: '#/components/schemas/RoomGuests'
                    availableForConfirmedBooking:
                      type: boolean
                      description: "Available for confirmed booking"
                    availableForReservedBooking:
                      type: boolean
                    roomAvailability:
                      type: object
                      properties:
                        rooms:
                          $ref: '#/components/schemas/Room'   
                        minimumSellingTotalPrice:
                          description: Binding price
                          type: number
                        totalPrice: 
                          description: Net total price
                          type: number
                        priceChanged: 
                          description: Is price did change
                          type: boolean
                        priceHT: 
                          description: Price before taxes
                          type: number
                        tax: 
                          description: Tax price. Included in totalPrice
                          type: number
                        hotelFees: 
                          description: Fees payable at the hotel, not included in totalPrice
                          type: number
                    confirmPropertyCode:
                      description: Confirmed property code, returned in prebook response
                      type: string
                    remarks:
                      description: Information / instruction concerning hotel and rates
                      type: string
  "/nuitee/2.0/booking/retrieve":
    post:
      tags:
        - Booking Flow
      summary: "Retrieve"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookinDetails'
        description: "Get booking details by Id"
        required: true
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    bookingResults:
                      type: object
                      description: List of bookings
                      properties:
                        bookings:
                          type: array
                          items: 
                            type: object
                            properties:
                              bookingId:
                                type: integer
                              checkIn:
                                type: string
                              checkOut:
                                type: string
                              hotelInfo:
                                $ref: "#/components/schemas/HotelInfo"
                              city:
                                $ref: "#/components/schemas/City"
                              clientIdentifier:
                                type: string
                              holderFirstName:
                                type: string
                              holderLastName:
                                type: string
                              holderTitulation:
                                type: string
                              holderEmail:
                                type: string
                              hotelRemarks:
                                type: string
                              price:
                                type: number
                              minimumSellingTotalPrice:
                                description: Binding price
                                type: number
                              paymentType:
                                type: string
                              reservationStatus:
                                type: string
                              confirmationNumber:
                                type: string
                              cancellationAmount:
                                type: string
                              termsAndConditions:
                                type: string
                              bookedRooms:
                                type: object
                                properties:
                                  bookedRooms:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        firstName:
                                          type: string
                                        lastName:
                                          type: string
                                        titulation:
                                          type: string
                                        adultCount:
                                          type: integer
                                        childCount:
                                          type: integer
                                        board:
                                          type: string
                                        roomDescription:
                                          type: string
                              cancelPoliciesInfos:
                                $ref: "#/components/schemas/cancelPoliciesInfos"
                              currency:
                                type: string
                              bookingDate:
                                type: string
                              bookingCreatedAt:
                                type: string
                              hotelConfirmationNumber:
                                type: string
  "/nuitee/2.0/booking/cancel":
    post:
      tags:
        - Booking Flow
      summary: Cancel
      x-codeSamples:
        - lang: 'NodeJS - axios'
          source: |
            var axios = require('axios');
            var data = JSON.stringify({"login":{"language":"en_US","password":"","userName":""},"bookingId":300614,"reason":"Test","timeout":"60000"});

            var config = {
              method: 'post',
              url: 'http://sandbox.nuitee.com/nuitee/booking/cancelBooking',
              headers: { 
                'Content-Type': 'application/json', 
                'Accept': 'application/json'
              },
              data : data
            };

            axios(config)
            .then(function (response) {
              console.log(JSON.stringify(response.data));
            })
            .catch(function (error) {
              console.log(error);
            });
        - lang: PHP
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "http://sandbox.nuitee.com/nuitee/booking/cancelBooking",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS =>"{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"bookingId\": 300614,\r\n\t\"reason\": \"Test\",\r\n\t\"timeout\": \"60000\"\r\n}",
              CURLOPT_HTTPHEADER => array(
                "Content-Type: application/json",
                "Accept: application/json"
              ),
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;
        - lang: 'Go - Native'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://sandbox.nuitee.com/nuitee/booking/cancelBooking"
              method := "POST"

              payload := strings.NewReader("{
            \n  \"login\": {
            \n    \"language\": \"en_US\",
            \n    \"password\": \"\",
            \n    \"userName\": \"\"
            \n  },
            \n  \"bookingId\": 300614,
            \n  \"reason\": \"Test\",
            \n  \"timeout\": \"60000\"
            \n}")

              client := &http.Client {
              }
              req, err := http.NewRequest(method, url, payload)

              if err != nil {
                fmt.Println(err)
              }
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Accept", "application/json")

              res, err := client.Do(req)
              defer res.Body.Close()
              body, err := ioutil.ReadAll(res.Body)

              fmt.Println(string(body))
            }
        - lang: Python - Requests
          source: |
            import requests

            url = "http://sandbox.nuitee.com/nuitee/booking/cancelBooking"

            payload = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"bookingId\": 300614,\r\n\t\"reason\": \"Test\",\r\n\t\"timeout\": \"60000\"\r\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data = payload)

            print(response.text.encode('utf8'))
        - lang: Swift - URLSession
          source: |
            import Foundation

            var semaphore = DispatchSemaphore (value: 0)

            let parameters = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n\t\"bookingId\": 300614,\r\n\t\"reason\": \"Test\",\r\n\t\"timeout\": \"60000\"\r\n}"
            let postData = parameters.data(using: .utf8)

            var request = URLRequest(url: URL(string: "http://sandbox.nuitee.com/nuitee/booking/cancelBooking")!,timeoutInterval: Double.infinity)
            request.addValue("application/json", forHTTPHeaderField: "Content-Type")
            request.addValue("application/json", forHTTPHeaderField: "Accept")

            request.httpMethod = "POST"
            request.httpBody = postData

            let task = URLSession.shared.dataTask(with: request) { data, response, error in 
              guard let data = data else {
                print(String(describing: error))
                return
              }
              print(String(data: data, encoding: .utf8)!)
              semaphore.signal()
            }

            task.resume()
            semaphore.wait()
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelBooking'
        description: "query for CancelBooking"
        required: true
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    cancellationAmount:
                      description: "cancellation amount"
                      type: string
                    refundAmount:
                      description: "refund amount"
                      type: string
                    bookingId:
                      description: "Booking id"
                      type: integer
                    cancellationStatus:
                      description: "Status of the cancellation"
                      type: string
                    currency:
                      description: 'Example: USD , EUR'
                      type: string

  #Static Data
  "/nuitee/2.0/content/allDestinations":
    post:
      tags:
        - Static Data
      summary: List of all destinations
      x-codeSamples:
        - lang: 'NodeJS - axios'
          source: |
            var axios = require('axios');
            var data = ' <allDestinationsRequest>
            \n    <login>
            \n        <language>en_US</language>
            \n        <password></password>
            \n        <username></username>
            \n    </login>
            \n    <checkInDate>2021-01-21</checkInDate>
            \n    <checkOutDate>2021-01-22</checkOutDate>
            \n    <hotelCodes>982327</hotelCodes>
            \n    <roomGuests>
            \n        <roomGuests>
            \n            <adultCount>2</adultCount>
            \n            <childCount>0</childCount>
            \n        </roomGuests>
            \n    </roomGuests>
            \n    <guestNationality>GB</guestNationality>
            \n    <currency>EUR</currency>
            \n    <languageCode>en_US</languageCode>
            \n    <timeout>20000</timeout>
            \n    <requestId>ZAK|296931</requestId>
            \n</allDestinationsRequest>';

            var config = {
              method: 'post',
              url: 'http://sandbox.nuitee.com/nuitee/content/allDestinations',
              headers: { 
                'Content-Type': 'application/xml', 
                'Accept': 'application/xml'
              },
              data : data
            };

            axios(config)
            .then(function (response) {
              console.log(JSON.stringify(response.data));
            })
            .catch(function (error) {
              console.log(error);
            });
        - lang: PHP
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "http://sandbox.nuitee.com/nuitee/content/allDestinations",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS =>" <allDestinationsRequest>\r\n    <login>\r\n        <language>en_US</language>\r\n        <password></password>\r\n        <username></username>\r\n    </login>\r\n    <checkInDate>2021-01-21</checkInDate>\r\n    <checkOutDate>2021-01-22</checkOutDate>\r\n    <hotelCodes>982327</hotelCodes>\r\n    <roomGuests>\r\n        <roomGuests>\r\n            <adultCount>2</adultCount>\r\n            <childCount>0</childCount>\r\n        </roomGuests>\r\n    </roomGuests>\r\n    <guestNationality>GB</guestNationality>\r\n    <currency>EUR</currency>\r\n    <languageCode>en_US</languageCode>\r\n    <timeout>20000</timeout>\r\n    <requestId>ZAK|296931</requestId>\r\n</allDestinationsRequest>",
              CURLOPT_HTTPHEADER => array(
                "Content-Type: application/xml",
                "Accept: application/xml"
              ),
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;
        - lang: 'Go - Native'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://sandbox.nuitee.com/nuitee/content/allDestinations"
              method := "POST"

              payload := strings.NewReader(" <allDestinationsRequest>
            \n    <login>
            \n        <language>en_US</language>
            \n        <password></password>
            \n        <username></username>
            \n    </login>
            \n    <checkInDate>2021-01-21</checkInDate>
            \n    <checkOutDate>2021-01-22</checkOutDate>
            \n    <hotelCodes>982327</hotelCodes>
            \n    <roomGuests>
            \n        <roomGuests>
            \n            <adultCount>2</adultCount>
            \n            <childCount>0</childCount>
            \n        </roomGuests>
            \n    </roomGuests>
            \n    <guestNationality>GB</guestNationality>
            \n    <currency>EUR</currency>
            \n    <languageCode>en_US</languageCode>
            \n    <timeout>20000</timeout>
            \n    <requestId>ZAK|296931</requestId>
            \n</allDestinationsRequest>")

              client := &http.Client {
              }
              req, err := http.NewRequest(method, url, payload)

              if err != nil {
                fmt.Println(err)
              }
              req.Header.Add("Content-Type", "application/xml")
              req.Header.Add("Accept", "application/xml")

              res, err := client.Do(req)
              defer res.Body.Close()
              body, err := ioutil.ReadAll(res.Body)

              fmt.Println(string(body))
            }
            }
        - lang: Python - Requests
          source: |
            import requests

            url = "http://sandbox.nuitee.com/nuitee/content/allDestinations"

            payload = " <allDestinationsRequest>\r\n    <login>\r\n        <language>en_US</language>\r\n        <password></password>\r\n        <username></username>\r\n    </login>\r\n    <checkInDate>2021-01-21</checkInDate>\r\n    <checkOutDate>2021-01-22</checkOutDate>\r\n    <hotelCodes>982327</hotelCodes>\r\n    <roomGuests>\r\n        <roomGuests>\r\n            <adultCount>2</adultCount>\r\n            <childCount>0</childCount>\r\n        </roomGuests>\r\n    </roomGuests>\r\n    <guestNationality>GB</guestNationality>\r\n    <currency>EUR</currency>\r\n    <languageCode>en_US</languageCode>\r\n    <timeout>20000</timeout>\r\n    <requestId>ZAK|296931</requestId>\r\n</allDestinationsRequest>"
            headers = {
              'Content-Type': 'application/xml',
              'Accept': 'application/xml'
            }

            response = requests.request("POST", url, headers=headers, data = payload)

            print(response.text.encode('utf8'))
        - lang: Swift - URLSession
          source: |
            import Foundation

            var semaphore = DispatchSemaphore (value: 0)

            let parameters = " <allDestinationsRequest>\r\n    <login>\r\n        <language>en_US</language>\r\n        <password></password>\r\n        <username></username>\r\n    </login>\r\n    <checkInDate>2021-01-21</checkInDate>\r\n    <checkOutDate>2021-01-22</checkOutDate>\r\n    <hotelCodes>982327</hotelCodes>\r\n    <roomGuests>\r\n        <roomGuests>\r\n            <adultCount>2</adultCount>\r\n            <childCount>0</childCount>\r\n        </roomGuests>\r\n    </roomGuests>\r\n    <guestNationality>GB</guestNationality>\r\n    <currency>EUR</currency>\r\n    <languageCode>en_US</languageCode>\r\n    <timeout>20000</timeout>\r\n    <requestId>ZAK|296931</requestId>\r\n</allDestinationsRequest>"
            let postData = parameters.data(using: .utf8)

            var request = URLRequest(url: URL(string: "http://sandbox.nuitee.com/nuitee/content/allDestinations")!,timeoutInterval: Double.infinity)
            request.addValue("application/xml", forHTTPHeaderField: "Content-Type")
            request.addValue("application/xml", forHTTPHeaderField: "Accept")

            request.httpMethod = "POST"
            request.httpBody = postData

            let task = URLSession.shared.dataTask(with: request) { data, response, error in 
              guard let data = data else {
                print(String(describing: error))
                return
              }
              print(String(data: data, encoding: .utf8)!)
              semaphore.signal()
            }

            task.resume()
            semaphore.wait()
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    destinations:
                      type: array
                      description: list of all destinations
                      items:
                        $ref: "#/components/schemas/Destinations"
  "/nuitee/2.0/content/hotelList":
    post:
      tags:
        - Static Data
      summary: Hotel list
      x-codeSamples:
        - lang: 'NodeJS - axios'
          source: |
            var axios = require('axios');
            var data = JSON.stringify({"login":{"language":"en_US","password":"","userName":""},"cityId":2734});

            var config = {
              method: 'post',
              url: 'http://sandbox.nuitee.com/nuitee/content/hotelInfos',
              headers: { 
                'Content-Type': 'application/json', 
                'Accept': 'application/json'
              },
              data : data
            };

            axios(config)
            .then(function (response) {
              console.log(JSON.stringify(response.data));
            })
            .catch(function (error) {
              console.log(error);
            });

        - lang: PHP
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "http://sandbox.nuitee.com/nuitee/content/hotelInfos",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS =>"{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n    \"cityId\" : 2734\r\n}",
              CURLOPT_HTTPHEADER => array(
                "Content-Type: application/json",
                "Accept: application/json"
              ),
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;

        - lang: 'Go - Native'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://sandbox.nuitee.com/nuitee/content/hotelInfos"
              method := "POST"

              payload := strings.NewReader("{
            \n  \"login\": {
            \n    \"language\": \"en_US\",
            \n    \"password\": \"\",
            \n    \"userName\": \"\"
            \n  },
            \n    \"cityId\" : 2734
            \n}")

              client := &http.Client {
              }
              req, err := http.NewRequest(method, url, payload)

              if err != nil {
                fmt.Println(err)
              }
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Accept", "application/json")

              res, err := client.Do(req)
              defer res.Body.Close()
              body, err := ioutil.ReadAll(res.Body)

              fmt.Println(string(body))
            }
        - lang: Python - Requests
          source: |
            import requests

            url = "http://sandbox.nuitee.com/nuitee/content/hotelInfos"

            payload = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n    \"cityId\" : 2734\r\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data = payload)

            print(response.text.encode('utf8'))

        - lang: Swift - URLSession
          source: |
            import Foundation

            var semaphore = DispatchSemaphore (value: 0)

            let parameters = "{\r\n\t\"login\": {\r\n\t\t\"language\": \"en_US\",\r\n\t\t\"password\": \"\",\r\n\t\t\"userName\": \"\"\r\n\t},\r\n    \"cityId\" : 2734\r\n}"
            let postData = parameters.data(using: .utf8)

            var request = URLRequest(url: URL(string: "http://sandbox.nuitee.com/nuitee/content/hotelInfos")!,timeoutInterval: Double.infinity)
            request.addValue("application/json", forHTTPHeaderField: "Content-Type")
            request.addValue("application/json", forHTTPHeaderField: "Accept")

            request.httpMethod = "POST"
            request.httpBody = postData

            let task = URLSession.shared.dataTask(with: request) { data, response, error in 
              guard let data = data else {
                print(String(describing: error))
                return
              }
              print(String(data: data, encoding: .utf8)!)
              semaphore.signal()
            }

            task.resume()
            semaphore.wait()

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelList'
        description: "get hotel list"
        required: true
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    hotelInfo:
                      type: array
                      description: List of hotel Informations
                      items:
                        $ref: "#/components/schemas/HotelInfo"     
  "/nuitee/2.0/content/hotelInfo":
    post:
      tags:
        - Static Data
      summary: Get hotel info
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hotelId:
                  type: integer
                  description: Hotel id
        description: "get hotel information"
        required: true
      responses:
        200:
            description: successful response
            content:
              application/json:
                schema:
                  properties:
                    responseStatus:
                      $ref: "#/components/schemas/ResponseStatus"
                    hotelId:
                      type: integer
                      description: Hotel id
                    name:
                      type: string
                    address1:
                      type: string
                    address2:
                      type: string
                    city:
                      type: string
                    postalCode:
                      type: string
                    country:
                      type: string
                    latitude:
                      type: string
                    longitude:
                      type: string
                    airportCode:
                      type: string
                    propertyCategory:
                      type: integer
                    propertyCurrency:
                      type: string
                    starRating:
                      type: string
                    confidence:
                      type: integer
                    supplierType:
                      type: string
                    location:
                      type: string
                    chainCodeId:
                      type: string
                    highRate:
                      type: string
                    lowRate:
                      type: number
                    checkInTime:
                      type: string
                    checkOutTime:
                      type: string
                    cityCode:
                      type: integer
                    hotelDescription:
                      type: string
                    hotelDiningDescription:
                      type: string
                    hotelAttraction:
                      type: string
                    hotelLocationDescription:
                      type: string
                    hotelFeatures:
                      type: string
                    hotelAmenitiesDescription:
                      type: string
                    hotelAttributeses:
                      type: array
                      items:
                        type: string
                    hotelImages:
                      type: array
                      items:
                        type: object
                        properties:
                          url:
                            type: string
                          thumbnailUrl:
                            type: string
                          caption:
                            type: string
                          order:
                            type: string
                          defaultImage:
                            type: string
components:
  schemas:
    Destinations:
      type: object
      properties:
        cityCode: 
          type: string
          description: Nuitée city code
        cityName:
          type: string
          description: City name
        countryCode:
          type: string
          description: Country code
        countryName:
          type: string
          description: Country name
        stateCode:
          type: string
          description : State code
        stateName:
          type: string
          description: State name
    HotelList: 
      type: object
      description: Get hotels list for the city requested
      properties:
        cityId: 
          description: City code (optional) - if not set it will return all hotels
          type: integer
    HotelResults:
      type: object
      description: Hotel list response
      properties:
        hotelResults:
          description: List of city's hotels
          type: array
          items:
            type: object
            properties:
              hotelInfo:
                $ref: '#/components/schemas/HotelInfo'
              minPrice:
                type: number
                description: The lowest price in the list of hotels
              rateDetails:
                $ref: '#/components/schemas/RateDetails'
              minRate:
                description: Minimum rate
                type: string
              maxRate:
                description: Maximum rate
                type: string
    RateDetails:
      type: object
      description: Rate details
      properties:
        rateDetails:
          type: array
          description: List of rate details
          items:
            type: object
            properties:
              rateDetailCode:
                description: rate detail code
                type: string
              rooms:
                $ref: '#/components/schemas/Room'
              minimumSellingTotalPrice:
                description: Binding price
                type: number
              totalPrice: 
                description: Net total price
                type: number
              priceHT:
                type: number
              tax: 
                description: Tax price. Included in totalPrice
                type: number
              taxesAndFees:
                type: object
                properties:
                  taxesAndFees:
                    type: array
                    items:
                      type: object
                      properties:
                        included:
                          type: boolean
                        description:
                          type: string
                        amount:
                          type: number
                        currency:
                          type: string

              hotelFees: 
                description: Fees payable at the hotel, not included in totalPrice
                type: number
              remarks:
                description: Information / instruction concerning hotel and rates
                type: string
              cancelPoliciesInfos:
                type: object
                properties:
                  cancelPoliciesInfos:
                    type: array
                    items:
                      type: object
                      properties:
                        cancellationPolicy: 
                          type: string
                        cancelTime:
                          description: cancellation time (YYYY-MM-DD)
                          type: string
                        type:
                          enum: [amount, percentage]
                          type: string
                        amount:
                          description: "If type is amount it will represent the cancallation fees in the requested currency. If type is percentage it will represent the percentage of totalPrice."
                          type: string
                  defaultPolicy:
                    type: string
                  hotelRemarks:
                    type: array
                    items:
                      type: string
                  cancellationPolicies:
                    type: array
                    items:
                      type: string
                  refundableTag:
                    enum: [RFN, NRFN, PRFN, NS]
                    description: "RFN: refundable, NRFN: non-refundable, NS: not stated, PRFN: partially refundable."
                    type: string
    Room:
      type: object
      description: Room object
      properties:
        rooms: 
          description: List of rooms
          type: array
          items:
            type: object
            properties: 
              roomCode:
                type: string
                description: Room code retrieved from search response
              adultCount:
                type: integer
                description: Total of adults
              childCount:
                type: integer
                description: Total of children
              includedBoard:
                description: Included board
                type: object
                properties:
                  boardId: 
                    description: Board id
                    type: string
                  boardDescription: 
                    description: Board description
                    type: string
                  price: 
                    description: Board price
                    type: number
              roomDescription:
                type: string
                description: Room description
              roomRemarks:
                type: string
                description: Room remarks
              roomRate:
                type: object
                description: Room rate
                properties:
                  initialPrice:
                    description: Room intial price
                    type: number
                  price:
                    description: Room price
                    type: number
                  initialPricePerNight:
                    type: array
                    description: List of initial price per night
                    items: 
                      type: number
                  pricePerNight:
                    description: List of price per night
                    type: array
                    items: 
                      type: number
                  promoDescription:
                    description: Promo description
                    type: string
    HotelInfo:
      type: object
      properties:
        hotelCode:
          type: integer
          description: Nuitée Hotel code
        hotelName:
          type: string
          description: Nuitée Hotel name
        hotelAddress: 
            type: string
            description: Nuitée Hotel address
        hotelPictureUrl: 
            type: string
            description: Nuitée Hotel picture url
        hotelDescription: 
            type: string
            description: Nuitée Hotel description
        longitude: 
            type: string
            description: Nuitée Hotel longitude
        latitude: 
            type: string
            description: Nuitée Hotel latitude
        starRating: 
            type: integer
            description: Nuitée Hotel stars
    City:
      type: object
      description: City
      properties:
        cityCode:
          type: integer
          description: Nuitée city code
        cityName:
          type: string
          description: City name
        countryName: 
          type: string
          description: Country name
    ResponseStatus:
      type: object
      description: Response status
      properties:
        statusCode:
          type: string
          description: Response status code
        requestAt:
          type: string
          description: Request time
        responseAt:
          type: string
          description: Response time
        statusMessage:
          type: string
          description: Response message
    RoomGuests:
      type: object
      description: list contains the total number of adults and children making the reservation
      required:
        - roomGuests
      properties: 
        roomGuests:
          type: array
          items:
            type: object
            properties:
              adultCount:
                type: integer
                description: Total of adults
              childCount:
                type: integer
                description: Total of children
              childAges:
                type: array
                description: List of children ages
                items:
                  type: integer
    SearchAvalability:
      type: object
      required:
        - checkInDate
        - hotelCodes
        - guestNationality
        - roomGuests
        - currency
        - languageCode
        - timeout
      properties:
        checkInDate:
          type: string
          description : Check-in date. (YYYY-MM-DD)
        checkOutDate:
          type: string
          description : Check-out date. (YYYY-MM-DD)
        hotelCodes:
          type: array
          description: List of Nuitée hotel codes - max 200
          items:
            type: integer
        roomGuests:
          $ref: '#/components/schemas/RoomGuests'
        guestNationality:
          type: string
          description: 'Traveler nationality: US, FR, GB.... (country code in ISO 3166-1 alpha-2)'
        currency:
          type: string
          description: 'Example: USD , EUR'
        languageCode:
          type: string
          description: 'Example: en_US, fr_FR'
        timeout:
          type: integer
          description: The response time of the request
    ConfirmPropertyAvailability:
      type: object
      required:
        - sessionId
        - hotelCode
        - rateDetailCode
        - confirmedRooms
      properties:
        sessionId:
          type: string
          description : 'SessionId retrieved from search response'
        hotelCode:
          type: integer
          description: Nuitée hotel code
        rateDetailCode:
          type: string
          description: RateCode retrieved from search response
        confirmedRooms:
          type: object
          description: Confirmed rooms
          properties:
            confirmedRooms:
              type: array
              description: List of confirmed rooms
              items:
                type: object
                properties:
                  boardId: 
                    type: string
                    description: Board Id
                  roomCode:
                    type: string
                    description: Room code retrieved from search response
        timeout:
          type: integer
          description: The response time of the request
    cancelPoliciesInfos:
      type: object
      description: Cancellation policies informations
      properties:
        cancelPoliciesInfos:
          description: List of cancellation policies informations
          type: array
          items:
            type: object
            properties:
              cancellationPolicy: 
                type: string
                description: cancellation policy 
              cancelTime:
                type: string
                description: cancellation time (YYYY-MM-DD)
              amount:
                type: string
                description: cancellation amount
              type:
                type: string
                description: type of cancellation
        defaultPolicy: 
          type: string
          description: Default policy
        hotelRemarks: 
          description: List of hotel remarks
          type: array
          items:
            type: string
        cancellationPolicies: 
          type: array
          description: List of cancellation policies
          items:
            type: string
        refundableTag:
          type: string
          description: refundable tag
    ConfirmBooking:
      type: object
      required:
        - sessionId
        - hotelCode
        - confirmPropertyCode
        - confirmedBooking
        - clientIdentifier
        - holder
        - reservationInfo
        - billingInfo
        - timeout
      properties:
        sessionId: 
          type: string
          description : ''
        hotelCode: 
          type: integer
          description: Nuitée hotel code
        confirmPropertyCode: 
          type: string
          description: Confirmed property code, returned in prebook response
        confirmedBooking: 
          type: boolean
          description: Confirmed booking
        clientIdentifier: 
          type: string
          description: Client identifier
        holder:
          type: object
          properties:
            email: 
              type: string
              description: holder's email
            firstName: 
              type: string
              description: holder's first name
            lastName: 
              type: string
              description: holder's last name
            titulation: 
              type: string
              description: holder's titulation
        reservationInfo:
          type: object
          description: Reservation informations
          properties:
            customerRoomInfos:
              description: List of all customer room informations. At least one pax per room
              type: array
              items:
                type: object
                properties:
                  roomCode:
                    type: string
                    description: Room code
                  firstName:
                    type: string
                    description: holder's first name
                  lastName:
                    type: string
                    description: holder's last name
                  titulation:
                    type: string
                    description: holder's titulation
                  customerComment:
                    type: string
                    description: Customer comment 
        billingInfo:
          type: object
          description: billing informations
          properties:
            paymentMethodType: 
              enum: [CREDIT_CARD, LIMIT]
              description: payment method type, if credit card, information in billing info should be set.
              type: string
            email:
              type: string
              description: Holder's email
              default: ""
            holderName:
              type: string
              description: Holder's holderName
              default: ""
            creditCardType:
              type: string
              enum: [VISA, MASTER_CARD, AMERICAN_EXPRESS, JCB, DISCOVER, CHINA_UNION_PAY, DINERS_CLUB]
              description: Holder's creditCardType
            creditCardNumber:
              type: string
              description: Holder's creditCardNumber
              default: ""
            creditCardExpirationMonth:
              type: string
              description: Holder's creditCardExpirationMonth
              default: ""
            creditCardExpirationYear:
              type: number
              description: Holder's creditCardExpirationYear
              default: ""
            creditCardIdentifier:
              type: string
              description: Holder's creditCardIdentifier
              default: ""
            totalPrice:
              type: number
              description: Holder's totalPrice
              default: 100.90
            currency:
              type: string
              description: Holder's currency
              default: "EUR"
        timeout:
          type: integer
          description: The response time of the request
    CancelBooking:
      type: object
      required:
        - bookingId
        - reason
        - timeout
      properties:
        bookingId:
          type: integer
          description: The booking id that you want to cancel
        reason:
          type: string
          description: Reason for the cancellation
        timeout:
          type: integer
          description: The response time of the request
    BookinDetails:
      type: object
      properties:
        bookingId:
          type: integer
          description: The booking id that you want to cancel
        clientIdentifier:
          type: string
          description: Client identifier
        bookingDate:
          type: string
          description: Booking deta
        startDate:
          type: string
          description: Start date
        endDate:
          type: string
          description: End date
        checkInStartDate:
          type: string
          description: Check-in date 
        checkInEndDate:
          type: string
          description: Check-out date 
        timeout:
          type: string
          description: Timeout
          
        
tags:
  - name: Booking Flow
    description: <p>Book with Nuitée API is very easy. <br/>Our booking flow consists of an initial <b>Availability Search Request</b> (By Single hotel or List of Hotels), a <b>Valuation</b> to choose the hotel from our results returned, and the <b>Booking Confirmation</b></p><br/><img src="https://www.nuitee.com/nuitee-documentation/DIAGRAM2.png"/>
  - name: Static Data
    description: Static data