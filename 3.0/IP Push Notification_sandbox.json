{
  "openapi": "3.0.0",
  "info": {
    "title": "IP Push Notification",
    "version": "1.0.0",
    "description": "This API provides a Push Notification for each incoming Instant Payment. It can be used by corporates to get this information in real time, which can be a huge advantage."
  },
  "servers": [
    {
      "url": "https://api-sandbox.commerzbank.com/payments-api/7/v1"
    }
  ],
  "paths": {
    "/subscriptions/push-account-statements": {
      "post": {
        "summary": "initial Subscription",
        "operationId": "postSubscription",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Location of the created resource (if created)"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this subscription. Will be used to add or delete subscription EventTypes or get the Status of this Subscription. "
                    },
                    "clientPushURI": {
                      "type": "string",
                      "description": "URI which will be used to push the notification to",
                      "example": "www.example-TPP.com/xs2a-client/v1/ASPSPid/psu-account-id/account-statements"
                    },
                    "status": {
                      "description": "This is the status of the subscription.",
                      "type": "string",
                      "enum": [
                        "received",
                        "rejected",
                        "valid",
                        "revokedByPSU",
                        "cancelledByASPSP"
                      ],
                      "example": "received",
                      "default": "received"
                    }
                  },
                  "required": [
                    "id",
                    "clientPushURI",
                    "status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "1",
                      "clientPushURI": "www.beispielurl.de/echtzeitbenachrichtigung",
                      "status": "received"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "description": "Subscription for Push Account Statement Subservice for Instant Payments. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "clientPushURI": "www.beispielurl.de/echtzeitbenachrichtigung",
                    "eventTypes": [
                      {
                        "iban": "DE36410400180500014680",
                        "name": "Notification for main selling account"
                      },
                      {
                        "iban": "DE28500400000255744510",
                        "name": "Notification for main selling account"
                      }
                    ]
                  }
                },
                "example-2": {
                  "value": {
                    "clientPushURI": "www.example-TPP.com/xs2a-client/v1/ASPSPid/psu-account-id/account-statements",
                    "eventTypes": [
                      {
                        "iban": "DE36410400180500014680",
                        "name": "Notification for main selling account"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "The inital subscription contains an array of eventTypes. Each eventType contains all of the needed informations for one account."
        }
      },
      "get": {
        "summary": "Get Subscriptions",
        "operationId": "getSubscriptionsPushAccountStatements",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subscriptions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiClientPushURI": {
                            "type": "string",
                            "example": "https://www.beispielurl.de/echtzeitbenachrichtigung",
                            "format": "uri"
                          },
                          "status": {
                            "type": "string",
                            "example": "valid",
                            "enum": [
                              "received",
                              "rejected",
                              "valid",
                              "revokedByPSU",
                              "cancelledByASPSP"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "subscriptions": [
                        {
                          "id": "1",
                          "apiClientPushURI": "https://www.beispielurl.de/echtzeitbenachrichtigung",
                          "status": "received"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "description": "Returns all subscriptions the calling user has."
      }
    },
    "/subscriptions/push-account-statements/{subscription-id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/subscription-id"
        }
      ],
      "get": {
        "summary": "Get Subscription",
        "operationId": "getSubscription",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiClientPushURI": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://www.beispielurl.de/echtzeitbenachrichtigung"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "received",
                        "rejected",
                        "valid",
                        "revokedByPSU",
                        "cancelledByASPSP"
                      ],
                      "example": "valid"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "1",
                      "apiClientPushURI": "https://www.beispielurl.de/echtzeitbenachrichtigung",
                      "status": "received"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "description": "Returns all saved Information for the given subscription-id."
      }
    },
    "/subscriptions/push-account-statements/{subscription-id}/event-types": {
      "parameters": [
        {
          "name": "subscription-id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "[A-Za-z0-9]*",
            "example": "id4711"
          },
          "description": "Identification of a specific subscription."
        }
      ],
      "post": {
        "summary": "Add event type",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Location of the created resource."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "unique Identifier for the saved event type"
                    },
                    "iban": {
                      "type": "string",
                      "description": "IBAN for the account, the user wants to get the informations about incoming instant payments",
                      "pattern": "[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}",
                      "example": "DE36410400180500014680"
                    },
                    "status": {
                      "description": "This is the status of the event type.",
                      "type": "string",
                      "enum": [
                        "received",
                        "rejected",
                        "valid",
                        "revokedByPSU"
                      ],
                      "example": "received",
                      "default": "received"
                    },
                    "name": {
                      "type": "string",
                      "description": "optional field the user can use to identify his event type",
                      "example": "Notification for main selling account"
                    }
                  },
                  "required": [
                    "id",
                    "iban",
                    "status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "1",
                      "iban": "DE36410400180500014680",
                      "status": "received",
                      "name": "Notification for main selling account"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "operationId": "postEventTypes",
        "description": "Creates and adds a eventType sub-resource to an existing subscription.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventType": {
                    "$ref": "#/components/schemas/EventType"
                  }
                },
                "required": [
                  "eventType"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "eventType": {
                      "iban": "DE36410400180500014680",
                      "name": "Notification for main selling account"
                    }
                  }
                },
                "example-2": {
                  "value": {
                    "eventType": {
                      "iban": "DE28500400000255744510",
                      "name": "Notification for main selling account"
                    }
                  }
                }
              }
            }
          },
          "description": "Contains a eventType which will be added to the saved subscription with given X-Request-ID."
        }
      },
      "get": {
        "summary": "Get event types",
        "operationId": "getEventTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eventTypes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "received",
                              "rejected",
                              "valid",
                              "revokedByPSU",
                              "cancelledByASPSP"
                            ]
                          },
                          "iban": {
                            "type": "string",
                            "description": "IBAN for the account, the user wants to get the informations about incoming instant payments",
                            "pattern": "[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}",
                            "example": "DE36410400180500014680"
                          },
                          "name": {
                            "type": "string",
                            "description": "optional field the user can use to identify his event type",
                            "example": "Notification for main selling account"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "eventTypes": [
                        {
                          "id": "1",
                          "status": "received",
                          "iban": "DE36410400180500014680",
                          "name": "Notification for second selling account"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "description": "Returns an array with all Event Types for one Subscription."
      }
    },
    "/subscriptions/push-account-statements/{subscription-id}/event-types/{event-type-id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/subscription-id"
        },
        {
          "$ref": "#/components/parameters/event-type-id"
        }
      ],
      "get": {
        "summary": "Get event type",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "This is the status of the subscription.",
                      "type": "string",
                      "enum": [
                        "received",
                        "rejected",
                        "valid",
                        "revokedByPSU"
                      ],
                      "example": "received",
                      "default": "received"
                    },
                    "iban": {
                      "type": "string",
                      "description": "IBAN for the account, the user wants to get the informations about incoming instant payments",
                      "pattern": "[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}",
                      "example": "DE36410400180500014680"
                    },
                    "name": {
                      "type": "string",
                      "description": "optional field the user can use to identify his event type",
                      "example": "Notification for main selling account"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "1",
                      "status": "received",
                      "iban": "DE36410400180500014680",
                      "name": "Notification for second selling account"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "operationId": "getEventType",
        "description": "Get saved Informations about a specific Subscription. "
      }
    },
    "/healthcheck": {
      "get": {
        "summary": "Endpoint for monitoring",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "operationId": "getHealthcheck",
        "description": ""
      }
    }
  },
  "components": {
    "schemas": {
      "Problem": {
        "title": "Problem",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri-reference",
            "description": "An absolute URI that identifies the problem type.  When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML)."
          },
          "title": {
            "type": "string",
            "format": "string",
            "description": "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localised)."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "minimum": 100,
            "maximum": 600,
            "exclusiveMaximum": true
          },
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the problem."
          },
          "instance": {
            "type": "string",
            "format": "uri-reference",
            "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced."
          }
        },
        "description": "A problem object according to RFC 7807."
      },
      "EventType": {
        "type": "object",
        "description": "Each EventType defines all used fields to subscribe for one account.  ",
        "x-examples": {
          "example_1": {
            "value": {
              "iban": "DE72200411330306002700",
              "name": "Notification for main selling account"
            }
          }
        },
        "title": "EventType",
        "properties": {
          "iban": {
            "type": "string",
            "description": "IBAN for the account, the user wants to get the informations about incoming instant payments",
            "pattern": "[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}",
            "example": "DE36410400180500014680"
          },
          "name": {
            "type": "string",
            "description": "optional field the user can use to identify his event type",
            "example": "Notification for main selling account"
          }
        },
        "required": [
          "iban"
        ]
      },
      "EventTypes": {
        "title": "EventTypes",
        "type": "array",
        "description": "An Array of eventTypes to subscribe for several account at a time.",
        "items": {
          "$ref": "#/components/schemas/EventType"
        },
        "x-examples": {
          "example-1": {
            "value": [
              {
                "iban": "DE36410400180500014680",
                "name": "Notification for main selling account"
              },
              {
                "iban": "DE28500400000255744510",
                "name": "Notification for second selling account"
              }
            ]
          }
        }
      },
      "Subscription": {
        "title": "Subscription",
        "type": "object",
        "description": "contains all needed fields for a subscription",
        "properties": {
          "clientPushURI": {
            "type": "string",
            "description": "URI which will be used to push the notification to",
            "example": "www.example-TPP.com/xs2a-client/v1/ASPSPid/psu-account-id/account-statements"
          },
          "eventTypes": {
            "$ref": "#/components/schemas/EventTypes"
          }
        },
        "required": [
          "clientPushURI",
          "eventTypes"
        ],
        "x-examples": {
          "example-1": {
            "value": {
              "clientPushURI": "www.example-TPP.com/xs2a-client/v1/ASPSPid/psu-account-id/account-statements",
              "eventTypes": [
                {
                  "iban": "DE36410400180500014680",
                  "name": "Notification for main selling account"
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "subscription-id": {
        "name": "subscription-id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[0-9]*",
          "example": "1"
        },
        "description": "Identification of a specific subscription."
      },
      "event-type-id": {
        "name": "event-type-id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[0-9]*",
          "example": "1"
        },
        "description": "Identification of a specific event type within the related subscription."
      }
    },
    "securitySchemes": {
      "OAuth (Sandbox)": {
        "type": "oauth2",
        "description": "The tokenmanager used for sandbox services.",
        "flows": {
          "password": {
            "tokenUrl": "https://api-sandbox.commerzbank.com/auth/realms/sandbox/protocol/openid-connect/token",
            "refreshUrl": "https://api-sandbox.commerzbank.com/auth/realms/sandbox/protocol/openid-connect/token",
            "scopes": {}
          },
          "authorizationCode": {
            "authorizationUrl": "https://api-sandbox.commerzbank.com/auth/realms/sandbox/protocol/openid-connect/auth",
            "tokenUrl": "https://api-sandbox.commerzbank.com/auth/realms/sandbox/protocol/openid-connect/token",
            "refreshUrl": "https://api-sandbox.commerzbank.com/auth/realms/sandbox/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  }
}